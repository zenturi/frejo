// Generated by Haxe 4.0.0-preview.4+1e3e5e0
#ifndef INCLUDED_mmvc_base_MappingConfig
#define INCLUDED_mmvc_base_MappingConfig

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_35942c9505538881_306_new)
HX_DECLARE_CLASS2(mmvc,base,MappingConfig)

namespace mmvc{
namespace base{


class HXCPP_CLASS_ATTRIBUTES MappingConfig_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef MappingConfig_obj OBJ_;
		MappingConfig_obj();

	public:
		enum { _hx_ClassId = 0x6a3b306a };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="mmvc.base.MappingConfig")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"mmvc.base.MappingConfig"); }

		hx::ObjectPtr< MappingConfig_obj > __new() {
			hx::ObjectPtr< MappingConfig_obj > __this = new MappingConfig_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< MappingConfig_obj > __alloc(hx::Ctx *_hx_ctx) {
			MappingConfig_obj *__this = (MappingConfig_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(MappingConfig_obj), true, "mmvc.base.MappingConfig"));
			*(void **)__this = MappingConfig_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_35942c9505538881_306_new)
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~MappingConfig_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("MappingConfig",50,54,8c,36); }

		hx::Class mediatorClass;
		::cpp::VirtualArray typedViewClasses;
		bool autoCreate;
		bool autoRemove;
};

} // end namespace mmvc
} // end namespace base

#endif /* INCLUDED_mmvc_base_MappingConfig */ 
