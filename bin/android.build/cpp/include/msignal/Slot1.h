// Generated by Haxe 4.0.0-preview.4+1e3e5e0
#ifndef INCLUDED_msignal_Slot1
#define INCLUDED_msignal_Slot1

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_msignal_Slot
#include <msignal/Slot.h>
#endif
HX_DECLARE_CLASS1(msignal,Signal)
HX_DECLARE_CLASS1(msignal,Signal1)
HX_DECLARE_CLASS1(msignal,Slot)
HX_DECLARE_CLASS1(msignal,Slot1)

namespace msignal{


class HXCPP_CLASS_ATTRIBUTES Slot1_obj : public  ::msignal::Slot_obj
{
	public:
		typedef  ::msignal::Slot_obj super;
		typedef Slot1_obj OBJ_;
		Slot1_obj();

	public:
		enum { _hx_ClassId = 0x6790139e };

		void __construct( ::msignal::Signal1 signal, ::Dynamic listener, ::Dynamic __o_once, ::Dynamic __o_priority);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="msignal.Slot1")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"msignal.Slot1"); }
		static hx::ObjectPtr< Slot1_obj > __new( ::msignal::Signal1 signal, ::Dynamic listener, ::Dynamic __o_once, ::Dynamic __o_priority);
		static hx::ObjectPtr< Slot1_obj > __alloc(hx::Ctx *_hx_ctx, ::msignal::Signal1 signal, ::Dynamic listener, ::Dynamic __o_once, ::Dynamic __o_priority);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Slot1_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Slot1",53,d0,f9,11); }

		 ::Dynamic param;
		void execute( ::Dynamic value1);
		::Dynamic execute_dyn();

};

} // end namespace msignal

#endif /* INCLUDED_msignal_Slot1 */ 
