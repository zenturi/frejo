// Generated by Haxe 4.0.0-preview.4+1e3e5e0
#ifndef INCLUDED_msignal_Signal2
#define INCLUDED_msignal_Signal2

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_msignal_Signal
#include <msignal/Signal.h>
#endif
HX_DECLARE_CLASS1(msignal,Signal)
HX_DECLARE_CLASS1(msignal,Signal2)

namespace msignal{


class HXCPP_CLASS_ATTRIBUTES Signal2_obj : public  ::msignal::Signal_obj
{
	public:
		typedef  ::msignal::Signal_obj super;
		typedef Signal2_obj OBJ_;
		Signal2_obj();

	public:
		enum { _hx_ClassId = 0x1e1399e1 };

		void __construct( ::Dynamic type1, ::Dynamic type2);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="msignal.Signal2")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"msignal.Signal2"); }
		static hx::ObjectPtr< Signal2_obj > __new( ::Dynamic type1, ::Dynamic type2);
		static hx::ObjectPtr< Signal2_obj > __alloc(hx::Ctx *_hx_ctx, ::Dynamic type1, ::Dynamic type2);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Signal2_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Signal2",aa,94,33,0e); }

		void dispatch( ::Dynamic value1, ::Dynamic value2);
		::Dynamic dispatch_dyn();

		 ::Dynamic createSlot( ::Dynamic _tmp_listener, ::Dynamic once, ::Dynamic priority);

};

} // end namespace msignal

#endif /* INCLUDED_msignal_Signal2 */ 
