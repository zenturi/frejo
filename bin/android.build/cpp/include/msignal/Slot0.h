// Generated by Haxe 4.0.0-preview.4+1e3e5e0
#ifndef INCLUDED_msignal_Slot0
#define INCLUDED_msignal_Slot0

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_msignal_Slot
#include <msignal/Slot.h>
#endif
HX_DECLARE_CLASS1(msignal,Signal)
HX_DECLARE_CLASS1(msignal,Signal0)
HX_DECLARE_CLASS1(msignal,Slot)
HX_DECLARE_CLASS1(msignal,Slot0)

namespace msignal{


class HXCPP_CLASS_ATTRIBUTES Slot0_obj : public  ::msignal::Slot_obj
{
	public:
		typedef  ::msignal::Slot_obj super;
		typedef Slot0_obj OBJ_;
		Slot0_obj();

	public:
		enum { _hx_ClassId = 0x6790139d };

		void __construct( ::msignal::Signal0 signal, ::Dynamic listener, ::Dynamic __o_once, ::Dynamic __o_priority);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="msignal.Slot0")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"msignal.Slot0"); }
		static hx::ObjectPtr< Slot0_obj > __new( ::msignal::Signal0 signal, ::Dynamic listener, ::Dynamic __o_once, ::Dynamic __o_priority);
		static hx::ObjectPtr< Slot0_obj > __alloc(hx::Ctx *_hx_ctx, ::msignal::Signal0 signal, ::Dynamic listener, ::Dynamic __o_once, ::Dynamic __o_priority);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Slot0_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Slot0",52,d0,f9,11); }

		void execute();
		::Dynamic execute_dyn();

};

} // end namespace msignal

#endif /* INCLUDED_msignal_Slot0 */ 
