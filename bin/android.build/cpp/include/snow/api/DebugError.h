// Generated by Haxe 4.0.0-preview.4+1e3e5e0
#ifndef INCLUDED_snow_api_DebugError
#define INCLUDED_snow_api_DebugError

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(snow,api,DebugError)
namespace snow{
namespace api{


class DebugError_obj : public hx::EnumBase_obj
{
	typedef hx::EnumBase_obj super;
		typedef DebugError_obj OBJ_;

	public:
		DebugError_obj() {};
		HX_DO_ENUM_RTTI;
		static void __boot();
		static void __register();
		static bool __GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp);
		::String GetEnumName( ) const { return HX_("snow.api.DebugError",74,f9,3f,20); }
		::String __ToString() const { return HX_("DebugError.",f9,e1,0d,3e) + _hx_tag; }

		static ::snow::api::DebugError assertion(::String expr);
		static ::Dynamic assertion_dyn();
		static ::snow::api::DebugError null_assertion(::String expr);
		static ::Dynamic null_assertion_dyn();
};

} // end namespace snow
} // end namespace api

#endif /* INCLUDED_snow_api_DebugError */ 
