// Generated by Haxe 4.0.0-preview.4+1e3e5e0
#include <hxcpp.h>

#ifndef INCLUDED_0067bf2d025ab5b6
#define INCLUDED_0067bf2d025ab5b6
#include "YGEnums.h"
#endif
#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_41ceae67ff73b9ad
#define INCLUDED_41ceae67ff73b9ad
#include "linc_yoga.h"
#endif
#ifndef INCLUDED_facebook_yoga_Enums
#include <facebook/yoga/Enums.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_b9d8053c0788ac75_246_alignToString,"facebook.yoga.Enums","alignToString",0xbe8a217f,"facebook.yoga.Enums.alignToString","facebook/yoga/Enums.hx",246,0xdc7b43c2)
HX_LOCAL_STACK_FRAME(_hx_pos_b9d8053c0788ac75_261_dimensionToString,"facebook.yoga.Enums","dimensionToString",0x6fba1e20,"facebook.yoga.Enums.dimensionToString","facebook/yoga/Enums.hx",261,0xdc7b43c2)
HX_LOCAL_STACK_FRAME(_hx_pos_b9d8053c0788ac75_270_directionToString,"facebook.yoga.Enums","directionToString",0x9b1e45f9,"facebook.yoga.Enums.directionToString","facebook/yoga/Enums.hx",270,0xdc7b43c2)
HX_LOCAL_STACK_FRAME(_hx_pos_b9d8053c0788ac75_280_displayToString,"facebook.yoga.Enums","displayToString",0xea5ed17c,"facebook.yoga.Enums.displayToString","facebook/yoga/Enums.hx",280,0xdc7b43c2)
HX_LOCAL_STACK_FRAME(_hx_pos_b9d8053c0788ac75_289_edgeToString,"facebook.yoga.Enums","edgeToString",0x6446e0db,"facebook.yoga.Enums.edgeToString","facebook/yoga/Enums.hx",289,0xdc7b43c2)
HX_LOCAL_STACK_FRAME(_hx_pos_b9d8053c0788ac75_305_experimentalFeatureToString,"facebook.yoga.Enums","experimentalFeatureToString",0x813425a8,"facebook.yoga.Enums.experimentalFeatureToString","facebook/yoga/Enums.hx",305,0xdc7b43c2)
HX_LOCAL_STACK_FRAME(_hx_pos_b9d8053c0788ac75_313_flexDirectionToString,"facebook.yoga.Enums","flexDirectionToString",0xfc6ed580,"facebook.yoga.Enums.flexDirectionToString","facebook/yoga/Enums.hx",313,0xdc7b43c2)
HX_LOCAL_STACK_FRAME(_hx_pos_b9d8053c0788ac75_324_justifyToString,"facebook.yoga.Enums","justifyToString",0xce3b448a,"facebook.yoga.Enums.justifyToString","facebook/yoga/Enums.hx",324,0xdc7b43c2)
HX_LOCAL_STACK_FRAME(_hx_pos_b9d8053c0788ac75_336_logLevelToString,"facebook.yoga.Enums","logLevelToString",0xf69d96fe,"facebook.yoga.Enums.logLevelToString","facebook/yoga/Enums.hx",336,0xdc7b43c2)
HX_LOCAL_STACK_FRAME(_hx_pos_b9d8053c0788ac75_349_measureModeToString,"facebook.yoga.Enums","measureModeToString",0x3053af1b,"facebook.yoga.Enums.measureModeToString","facebook/yoga/Enums.hx",349,0xdc7b43c2)
HX_LOCAL_STACK_FRAME(_hx_pos_b9d8053c0788ac75_359_nodeTypeToString,"facebook.yoga.Enums","nodeTypeToString",0xb040727a,"facebook.yoga.Enums.nodeTypeToString","facebook/yoga/Enums.hx",359,0xdc7b43c2)
HX_LOCAL_STACK_FRAME(_hx_pos_b9d8053c0788ac75_368_overflowToString,"facebook.yoga.Enums","overflowToString",0x009ed9e0,"facebook.yoga.Enums.overflowToString","facebook/yoga/Enums.hx",368,0xdc7b43c2)
HX_LOCAL_STACK_FRAME(_hx_pos_b9d8053c0788ac75_378_positionTypeToString,"facebook.yoga.Enums","positionTypeToString",0xa7e938a1,"facebook.yoga.Enums.positionTypeToString","facebook/yoga/Enums.hx",378,0xdc7b43c2)
HX_LOCAL_STACK_FRAME(_hx_pos_b9d8053c0788ac75_387_printOptionsToString,"facebook.yoga.Enums","printOptionsToString",0x3630e14f,"facebook.yoga.Enums.printOptionsToString","facebook/yoga/Enums.hx",387,0xdc7b43c2)
HX_LOCAL_STACK_FRAME(_hx_pos_b9d8053c0788ac75_397_unitToString,"facebook.yoga.Enums","unitToString",0x65a80222,"facebook.yoga.Enums.unitToString","facebook/yoga/Enums.hx",397,0xdc7b43c2)
HX_LOCAL_STACK_FRAME(_hx_pos_b9d8053c0788ac75_408_wrapToString,"facebook.yoga.Enums","wrapToString",0x9e872768,"facebook.yoga.Enums.wrapToString","facebook/yoga/Enums.hx",408,0xdc7b43c2)
HX_LOCAL_STACK_FRAME(_hx_pos_b9d8053c0788ac75_236_boot,"facebook.yoga.Enums","boot",0x1898e904,"facebook.yoga.Enums.boot","facebook/yoga/Enums.hx",236,0xdc7b43c2)
HX_LOCAL_STACK_FRAME(_hx_pos_b9d8053c0788ac75_237_boot,"facebook.yoga.Enums","boot",0x1898e904,"facebook.yoga.Enums.boot","facebook/yoga/Enums.hx",237,0xdc7b43c2)
HX_LOCAL_STACK_FRAME(_hx_pos_b9d8053c0788ac75_238_boot,"facebook.yoga.Enums","boot",0x1898e904,"facebook.yoga.Enums.boot","facebook/yoga/Enums.hx",238,0xdc7b43c2)
HX_LOCAL_STACK_FRAME(_hx_pos_b9d8053c0788ac75_239_boot,"facebook.yoga.Enums","boot",0x1898e904,"facebook.yoga.Enums.boot","facebook/yoga/Enums.hx",239,0xdc7b43c2)
HX_LOCAL_STACK_FRAME(_hx_pos_b9d8053c0788ac75_240_boot,"facebook.yoga.Enums","boot",0x1898e904,"facebook.yoga.Enums.boot","facebook/yoga/Enums.hx",240,0xdc7b43c2)
HX_LOCAL_STACK_FRAME(_hx_pos_b9d8053c0788ac75_242_boot,"facebook.yoga.Enums","boot",0x1898e904,"facebook.yoga.Enums.boot","facebook/yoga/Enums.hx",242,0xdc7b43c2)
namespace facebook{
namespace yoga{

void Enums_obj::__construct() { }

Dynamic Enums_obj::__CreateEmpty() { return new Enums_obj; }

void *Enums_obj::_hx_vtable = 0;

Dynamic Enums_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Enums_obj > _hx_result = new Enums_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Enums_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x6a968a3c;
}

int Enums_obj::edgeCount;

int Enums_obj::experimentalFeatureCount;

int Enums_obj::measureModeCount;

 YGValue Enums_obj::valueUndefined;

 YGValue Enums_obj::valueAuto;

 YGValue Enums_obj::valueZero;

::String Enums_obj::alignToString( YGAlign value){
            	HX_STACKFRAME(&_hx_pos_b9d8053c0788ac75_246_alignToString)
HXDLIN( 246)		 YGAlign _hx_switch_0 = value;
            		if (  (_hx_switch_0==YGAlignAuto) ){
HXLINE( 247)			return HX_("auto",6f,df,76,40);
HXDLIN( 247)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==YGAlignBaseline) ){
HXLINE( 252)			return HX_("baseline",85,dc,27,11);
HXDLIN( 252)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==YGAlignCenter) ){
HXLINE( 249)			return HX_("center",d5,25,db,05);
HXDLIN( 249)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==YGAlignFlexEnd) ){
HXLINE( 250)			return HX_("flex-end",87,3d,54,ed);
HXDLIN( 250)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==YGAlignFlexStart) ){
HXLINE( 248)			return HX_("flex-start",0e,71,95,2c);
HXDLIN( 248)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==YGAlignSpaceAround) ){
HXLINE( 254)			return HX_("space-around",34,10,11,f0);
HXDLIN( 254)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==YGAlignSpaceBetween) ){
HXLINE( 253)			return HX_("space-between",01,64,1b,f8);
HXDLIN( 253)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==YGAlignStretch) ){
HXLINE( 251)			return HX_("stretch",05,3e,53,f6);
HXDLIN( 251)			goto _hx_goto_0;
            		}
            		/* default */{
HXLINE( 255)			return HX_("unknown",8a,23,7b,e1);
            		}
            		_hx_goto_0:;
HXLINE( 246)		return null();
            	}


::String Enums_obj::dimensionToString( YGDimension value){
            	HX_STACKFRAME(&_hx_pos_b9d8053c0788ac75_261_dimensionToString)
HXDLIN( 261)		 YGDimension _hx_switch_0 = value;
            		if (  (_hx_switch_0==YGDimensionHeight) ){
HXLINE( 263)			return HX_("height",e7,07,4c,02);
HXDLIN( 263)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==YGDimensionWidth) ){
HXLINE( 262)			return HX_("width",06,b6,62,ca);
HXDLIN( 262)			goto _hx_goto_2;
            		}
            		/* default */{
HXLINE( 264)			return HX_("unknown",8a,23,7b,e1);
            		}
            		_hx_goto_2:;
HXLINE( 261)		return null();
            	}


::String Enums_obj::directionToString( YGDirection value){
            	HX_STACKFRAME(&_hx_pos_b9d8053c0788ac75_270_directionToString)
HXDLIN( 270)		 YGDirection _hx_switch_0 = value;
            		if (  (_hx_switch_0==YGDirectionInherit) ){
HXLINE( 271)			return HX_("inherit",fb,23,55,2e);
HXDLIN( 271)			goto _hx_goto_4;
            		}
            		if (  (_hx_switch_0==YGDirectionLTR) ){
HXLINE( 272)			return HX_("ltr",ea,58,52,00);
HXDLIN( 272)			goto _hx_goto_4;
            		}
            		if (  (_hx_switch_0==YGDirectionRTL) ){
HXLINE( 273)			return HX_("rtl",6a,e6,56,00);
HXDLIN( 273)			goto _hx_goto_4;
            		}
            		/* default */{
HXLINE( 274)			return HX_("unknown",8a,23,7b,e1);
            		}
            		_hx_goto_4:;
HXLINE( 270)		return null();
            	}


::String Enums_obj::displayToString( YGDisplay value){
            	HX_STACKFRAME(&_hx_pos_b9d8053c0788ac75_280_displayToString)
HXDLIN( 280)		 YGDisplay _hx_switch_0 = value;
            		if (  (_hx_switch_0==YGDisplayFlex) ){
HXLINE( 281)			return HX_("flex",39,0f,be,43);
HXDLIN( 281)			goto _hx_goto_6;
            		}
            		if (  (_hx_switch_0==YGDisplayNone) ){
HXLINE( 282)			return HX_("none",b8,12,0a,49);
HXDLIN( 282)			goto _hx_goto_6;
            		}
            		/* default */{
HXLINE( 283)			return HX_("unknown",8a,23,7b,e1);
            		}
            		_hx_goto_6:;
HXLINE( 280)		return null();
            	}


::String Enums_obj::edgeToString( YGEdge value){
            	HX_STACKFRAME(&_hx_pos_b9d8053c0788ac75_289_edgeToString)
HXDLIN( 289)		 YGEdge _hx_switch_0 = value;
            		if (  (_hx_switch_0==YGEdgeAll) ){
HXLINE( 298)			return HX_("all",21,f9,49,00);
HXDLIN( 298)			goto _hx_goto_8;
            		}
            		if (  (_hx_switch_0==YGEdgeBottom) ){
HXLINE( 293)			return HX_("bottom",eb,e6,78,65);
HXDLIN( 293)			goto _hx_goto_8;
            		}
            		if (  (_hx_switch_0==YGEdgeEnd) ){
HXLINE( 295)			return HX_("end",db,03,4d,00);
HXDLIN( 295)			goto _hx_goto_8;
            		}
            		if (  (_hx_switch_0==YGEdgeHorizontal) ){
HXLINE( 296)			return HX_("horizontal",e4,fc,c3,15);
HXDLIN( 296)			goto _hx_goto_8;
            		}
            		if (  (_hx_switch_0==YGEdgeLeft) ){
HXLINE( 290)			return HX_("left",07,08,b0,47);
HXDLIN( 290)			goto _hx_goto_8;
            		}
            		if (  (_hx_switch_0==YGEdgeRight) ){
HXLINE( 292)			return HX_("right",dc,0b,64,e9);
HXDLIN( 292)			goto _hx_goto_8;
            		}
            		if (  (_hx_switch_0==YGEdgeStart) ){
HXLINE( 294)			return HX_("start",62,74,0b,84);
HXDLIN( 294)			goto _hx_goto_8;
            		}
            		if (  (_hx_switch_0==YGEdgeTop) ){
HXLINE( 291)			return HX_("top",95,66,58,00);
HXDLIN( 291)			goto _hx_goto_8;
            		}
            		if (  (_hx_switch_0==YGEdgeVertical) ){
HXLINE( 297)			return HX_("vertical",76,bc,15,6a);
HXDLIN( 297)			goto _hx_goto_8;
            		}
            		/* default */{
HXLINE( 299)			return HX_("unknown",8a,23,7b,e1);
            		}
            		_hx_goto_8:;
HXLINE( 289)		return null();
            	}


::String Enums_obj::experimentalFeatureToString( YGExperimentalFeature value){
            	HX_STACKFRAME(&_hx_pos_b9d8053c0788ac75_305_experimentalFeatureToString)
HXDLIN( 305)		if (hx::IsEq( value,YGExperimentalFeatureWebFlexBasis )) {
HXLINE( 306)			return HX_("web-flex-basis",c3,3d,28,2c);
            		}
            		else {
HXLINE( 307)			return HX_("unknown",8a,23,7b,e1);
            		}
HXLINE( 305)		return null();
            	}


::String Enums_obj::flexDirectionToString( YGFlexDirection value){
            	HX_STACKFRAME(&_hx_pos_b9d8053c0788ac75_313_flexDirectionToString)
HXDLIN( 313)		 YGFlexDirection _hx_switch_0 = value;
            		if (  (_hx_switch_0==YGFlexDirectionColumn) ){
HXLINE( 314)			return HX_("column",d6,4e,8b,c6);
HXDLIN( 314)			goto _hx_goto_11;
            		}
            		if (  (_hx_switch_0==YGFlexDirectionColumnReverse) ){
HXLINE( 315)			return HX_("column-reverse",6b,5d,31,d6);
HXDLIN( 315)			goto _hx_goto_11;
            		}
            		if (  (_hx_switch_0==YGFlexDirectionRow) ){
HXLINE( 316)			return HX_("row",1a,e2,56,00);
HXDLIN( 316)			goto _hx_goto_11;
            		}
            		if (  (_hx_switch_0==YGFlexDirectionRowReverse) ){
HXLINE( 317)			return HX_("row-reverse",af,d4,67,fa);
HXDLIN( 317)			goto _hx_goto_11;
            		}
            		/* default */{
HXLINE( 318)			return HX_("unknown",8a,23,7b,e1);
            		}
            		_hx_goto_11:;
HXLINE( 313)		return null();
            	}


::String Enums_obj::justifyToString( YGJustify value){
            	HX_STACKFRAME(&_hx_pos_b9d8053c0788ac75_324_justifyToString)
HXDLIN( 324)		 YGJustify _hx_switch_0 = value;
            		if (  (_hx_switch_0==YGJustifyCenter) ){
HXLINE( 326)			return HX_("center",d5,25,db,05);
HXDLIN( 326)			goto _hx_goto_13;
            		}
            		if (  (_hx_switch_0==YGJustifyFlexEnd) ){
HXLINE( 327)			return HX_("flex-end",87,3d,54,ed);
HXDLIN( 327)			goto _hx_goto_13;
            		}
            		if (  (_hx_switch_0==YGJustifyFlexStart) ){
HXLINE( 325)			return HX_("flex-start",0e,71,95,2c);
HXDLIN( 325)			goto _hx_goto_13;
            		}
            		if (  (_hx_switch_0==YGJustifySpaceAround) ){
HXLINE( 329)			return HX_("space-around",34,10,11,f0);
HXDLIN( 329)			goto _hx_goto_13;
            		}
            		if (  (_hx_switch_0==YGJustifySpaceBetween) ){
HXLINE( 328)			return HX_("space-between",01,64,1b,f8);
HXDLIN( 328)			goto _hx_goto_13;
            		}
            		/* default */{
HXLINE( 330)			return HX_("unknown",8a,23,7b,e1);
            		}
            		_hx_goto_13:;
HXLINE( 324)		return null();
            	}


::String Enums_obj::logLevelToString( YGLogLevel value){
            	HX_STACKFRAME(&_hx_pos_b9d8053c0788ac75_336_logLevelToString)
HXDLIN( 336)		 YGLogLevel _hx_switch_0 = value;
            		if (  (_hx_switch_0==YGLogLevelDebug) ){
HXLINE( 340)			return HX_("debug",53,52,1f,d7);
HXDLIN( 340)			goto _hx_goto_15;
            		}
            		if (  (_hx_switch_0==YGLogLevelError) ){
HXLINE( 337)			return HX_("error",c8,cb,29,73);
HXDLIN( 337)			goto _hx_goto_15;
            		}
            		if (  (_hx_switch_0==YGLogLevelFatal) ){
HXLINE( 342)			return HX_("fatal",04,38,55,fb);
HXDLIN( 342)			goto _hx_goto_15;
            		}
            		if (  (_hx_switch_0==YGLogLevelInfo) ){
HXLINE( 339)			return HX_("info",6e,38,bb,45);
HXDLIN( 339)			goto _hx_goto_15;
            		}
            		if (  (_hx_switch_0==YGLogLevelVerbose) ){
HXLINE( 341)			return HX_("verbose",82,d7,b9,71);
HXDLIN( 341)			goto _hx_goto_15;
            		}
            		if (  (_hx_switch_0==YGLogLevelWarn) ){
HXLINE( 338)			return HX_("warn",46,62,f2,4e);
HXDLIN( 338)			goto _hx_goto_15;
            		}
            		/* default */{
HXLINE( 343)			return HX_("unknown",8a,23,7b,e1);
            		}
            		_hx_goto_15:;
HXLINE( 336)		return null();
            	}


::String Enums_obj::measureModeToString( YGMeasureMode value){
            	HX_STACKFRAME(&_hx_pos_b9d8053c0788ac75_349_measureModeToString)
HXDLIN( 349)		 YGMeasureMode _hx_switch_0 = value;
            		if (  (_hx_switch_0==YGMeasureModeAtMost) ){
HXLINE( 352)			return HX_("at-most",5d,d5,70,54);
HXDLIN( 352)			goto _hx_goto_17;
            		}
            		if (  (_hx_switch_0==YGMeasureModeExactly) ){
HXLINE( 351)			return HX_("exactly",0c,ef,71,7e);
HXDLIN( 351)			goto _hx_goto_17;
            		}
            		if (  (_hx_switch_0==YGMeasureModeUndefined) ){
HXLINE( 350)			return HX_("undefined",90,3e,0a,9d);
HXDLIN( 350)			goto _hx_goto_17;
            		}
            		/* default */{
HXLINE( 353)			return HX_("unknown",8a,23,7b,e1);
            		}
            		_hx_goto_17:;
HXLINE( 349)		return null();
            	}


::String Enums_obj::nodeTypeToString( YGNodeType value){
            	HX_STACKFRAME(&_hx_pos_b9d8053c0788ac75_359_nodeTypeToString)
HXDLIN( 359)		 YGNodeType _hx_switch_0 = value;
            		if (  (_hx_switch_0==YGNodeTypeDefault) ){
HXLINE( 360)			return HX_("default",c1,d8,c3,9b);
HXDLIN( 360)			goto _hx_goto_19;
            		}
            		if (  (_hx_switch_0==YGNodeTypeText) ){
HXLINE( 361)			return HX_("text",ad,cc,f9,4c);
HXDLIN( 361)			goto _hx_goto_19;
            		}
            		/* default */{
HXLINE( 362)			return HX_("unknown",8a,23,7b,e1);
            		}
            		_hx_goto_19:;
HXLINE( 359)		return null();
            	}


::String Enums_obj::overflowToString( YGOverflow value){
            	HX_STACKFRAME(&_hx_pos_b9d8053c0788ac75_368_overflowToString)
HXDLIN( 368)		 YGOverflow _hx_switch_0 = value;
            		if (  (_hx_switch_0==YGOverflowHidden) ){
HXLINE( 370)			return HX_("hidden",6a,ff,95,4c);
HXDLIN( 370)			goto _hx_goto_21;
            		}
            		if (  (_hx_switch_0==YGOverflowScroll) ){
HXLINE( 371)			return HX_("scroll",0d,d8,64,47);
HXDLIN( 371)			goto _hx_goto_21;
            		}
            		if (  (_hx_switch_0==YGOverflowVisible) ){
HXLINE( 369)			return HX_("visible",72,78,24,a3);
HXDLIN( 369)			goto _hx_goto_21;
            		}
            		/* default */{
HXLINE( 372)			return HX_("unknown",8a,23,7b,e1);
            		}
            		_hx_goto_21:;
HXLINE( 368)		return null();
            	}


::String Enums_obj::positionTypeToString( YGPositionType value){
            	HX_STACKFRAME(&_hx_pos_b9d8053c0788ac75_378_positionTypeToString)
HXDLIN( 378)		 YGPositionType _hx_switch_0 = value;
            		if (  (_hx_switch_0==YGPositionTypeAbsolute) ){
HXLINE( 380)			return HX_("absolute",77,ce,95,c3);
HXDLIN( 380)			goto _hx_goto_23;
            		}
            		if (  (_hx_switch_0==YGPositionTypeRelative) ){
HXLINE( 379)			return HX_("relative",cc,bc,d4,35);
HXDLIN( 379)			goto _hx_goto_23;
            		}
            		/* default */{
HXLINE( 381)			return HX_("unknown",8a,23,7b,e1);
            		}
            		_hx_goto_23:;
HXLINE( 378)		return null();
            	}


::String Enums_obj::printOptionsToString( YGPrintOptions value){
            	HX_STACKFRAME(&_hx_pos_b9d8053c0788ac75_387_printOptionsToString)
HXDLIN( 387)		 YGPrintOptions _hx_switch_0 = value;
            		if (  (_hx_switch_0==YGPrintOptionsChildren) ){
HXLINE( 390)			return HX_("children",3f,19,6a,70);
HXDLIN( 390)			goto _hx_goto_25;
            		}
            		if (  (_hx_switch_0==YGPrintOptionsLayout) ){
HXLINE( 388)			return HX_("layout",aa,ae,b8,58);
HXDLIN( 388)			goto _hx_goto_25;
            		}
            		if (  (_hx_switch_0==YGPrintOptionsStyle) ){
HXLINE( 389)			return HX_("style",31,a5,1d,84);
HXDLIN( 389)			goto _hx_goto_25;
            		}
            		/* default */{
HXLINE( 391)			return HX_("unknown",8a,23,7b,e1);
            		}
            		_hx_goto_25:;
HXLINE( 387)		return null();
            	}


::String Enums_obj::unitToString( YGUnit value){
            	HX_STACKFRAME(&_hx_pos_b9d8053c0788ac75_397_unitToString)
HXDLIN( 397)		 YGUnit _hx_switch_0 = value;
            		if (  (_hx_switch_0==YGUnitAuto) ){
HXLINE( 401)			return HX_("auto",6f,df,76,40);
HXDLIN( 401)			goto _hx_goto_27;
            		}
            		if (  (_hx_switch_0==YGUnitPercent) ){
HXLINE( 400)			return HX_("percent",c5,aa,da,78);
HXDLIN( 400)			goto _hx_goto_27;
            		}
            		if (  (_hx_switch_0==YGUnitPoint) ){
HXLINE( 399)			return HX_("point",50,b4,8f,c6);
HXDLIN( 399)			goto _hx_goto_27;
            		}
            		if (  (_hx_switch_0==YGUnitUndefined) ){
HXLINE( 398)			return HX_("undefined",90,3e,0a,9d);
HXDLIN( 398)			goto _hx_goto_27;
            		}
            		/* default */{
HXLINE( 402)			return HX_("unknown",8a,23,7b,e1);
            		}
            		_hx_goto_27:;
HXLINE( 397)		return null();
            	}


::String Enums_obj::wrapToString( YGWrap value){
            	HX_STACKFRAME(&_hx_pos_b9d8053c0788ac75_408_wrapToString)
HXDLIN( 408)		 YGWrap _hx_switch_0 = value;
            		if (  (_hx_switch_0==YGWrapNoWrap) ){
HXLINE( 409)			return HX_("no-wrap",96,68,dd,77);
HXDLIN( 409)			goto _hx_goto_29;
            		}
            		if (  (_hx_switch_0==YGWrapWrap) ){
HXLINE( 410)			return HX_("wrap",ca,39,ff,4e);
HXDLIN( 410)			goto _hx_goto_29;
            		}
            		if (  (_hx_switch_0==YGWrapWrapReverse) ){
HXLINE( 411)			return HX_("wrap-reverse",5f,5c,b7,41);
HXDLIN( 411)			goto _hx_goto_29;
            		}
            		/* default */{
HXLINE( 412)			return HX_("unknown",8a,23,7b,e1);
            		}
            		_hx_goto_29:;
HXLINE( 408)		return null();
            	}



Enums_obj::Enums_obj()
{
}

bool Enums_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"edgeCount") ) { outValue = ( edgeCount ); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"measureModeCount") ) { outValue = ( measureModeCount ); return true; }
		break;
	case 24:
		if (HX_FIELD_EQ(inName,"experimentalFeatureCount") ) { outValue = ( experimentalFeatureCount ); return true; }
	}
	return false;
}

bool Enums_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"edgeCount") ) { edgeCount=ioValue.Cast< int >(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"measureModeCount") ) { measureModeCount=ioValue.Cast< int >(); return true; }
		break;
	case 24:
		if (HX_FIELD_EQ(inName,"experimentalFeatureCount") ) { experimentalFeatureCount=ioValue.Cast< int >(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo *Enums_obj_sMemberStorageInfo = 0;
static hx::StaticInfo Enums_obj_sStaticStorageInfo[] = {
	{hx::fsInt,(void *) &Enums_obj::edgeCount,HX_("edgeCount",52,ef,b1,8b)},
	{hx::fsInt,(void *) &Enums_obj::experimentalFeatureCount,HX_("experimentalFeatureCount",81,c0,23,26)},
	{hx::fsInt,(void *) &Enums_obj::measureModeCount,HX_("measureModeCount",2e,43,51,ba)},
	{hx::fsObject /*YGValue*/ ,(void *) &Enums_obj::valueUndefined,HX_("valueUndefined",df,a8,7b,e8)},
	{hx::fsObject /*YGValue*/ ,(void *) &Enums_obj::valueAuto,HX_("valueAuto",80,97,fb,8c)},
	{hx::fsObject /*YGValue*/ ,(void *) &Enums_obj::valueZero,HX_("valueZero",39,c7,75,9d)},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void Enums_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Enums_obj::edgeCount,"edgeCount");
	HX_MARK_MEMBER_NAME(Enums_obj::experimentalFeatureCount,"experimentalFeatureCount");
	HX_MARK_MEMBER_NAME(Enums_obj::measureModeCount,"measureModeCount");
	HX_MARK_MEMBER_NAME(Enums_obj::valueUndefined,"valueUndefined");
	HX_MARK_MEMBER_NAME(Enums_obj::valueAuto,"valueAuto");
	HX_MARK_MEMBER_NAME(Enums_obj::valueZero,"valueZero");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Enums_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Enums_obj::edgeCount,"edgeCount");
	HX_VISIT_MEMBER_NAME(Enums_obj::experimentalFeatureCount,"experimentalFeatureCount");
	HX_VISIT_MEMBER_NAME(Enums_obj::measureModeCount,"measureModeCount");
	HX_VISIT_MEMBER_NAME(Enums_obj::valueUndefined,"valueUndefined");
	HX_VISIT_MEMBER_NAME(Enums_obj::valueAuto,"valueAuto");
	HX_VISIT_MEMBER_NAME(Enums_obj::valueZero,"valueZero");
};

#endif

hx::Class Enums_obj::__mClass;

static ::String Enums_obj_sStaticFields[] = {
	HX_("edgeCount",52,ef,b1,8b),
	HX_("experimentalFeatureCount",81,c0,23,26),
	HX_("measureModeCount",2e,43,51,ba),
	::String(null())
};

void Enums_obj::__register()
{
	Enums_obj _hx_dummy;
	Enums_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("facebook.yoga.Enums",dc,2c,35,0f);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Enums_obj::__GetStatic;
	__mClass->mSetStaticField = &Enums_obj::__SetStatic;
	__mClass->mMarkFunc = Enums_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Enums_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Enums_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Enums_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Enums_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Enums_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Enums_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_b9d8053c0788ac75_236_boot)
HXDLIN( 236)		edgeCount = 9;
            	}
{
            	HX_STACKFRAME(&_hx_pos_b9d8053c0788ac75_237_boot)
HXDLIN( 237)		experimentalFeatureCount = 1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_b9d8053c0788ac75_238_boot)
HXDLIN( 238)		measureModeCount = 3;
            	}
{
            	HX_STACKFRAME(&_hx_pos_b9d8053c0788ac75_239_boot)
HXDLIN( 239)		valueUndefined = linc::yoga::setValue(::Math_obj::NaN,YGUnitUndefined);
            	}
{
            	HX_STACKFRAME(&_hx_pos_b9d8053c0788ac75_240_boot)
HXDLIN( 240)		valueAuto = linc::yoga::setValue(::Math_obj::NaN,YGUnitAuto);
            	}
{
            	HX_STACKFRAME(&_hx_pos_b9d8053c0788ac75_242_boot)
HXDLIN( 242)		valueZero = linc::yoga::setValue(( (Float)(0) ),YGUnitPoint);
            	}
}

} // end namespace facebook
} // end namespace yoga
