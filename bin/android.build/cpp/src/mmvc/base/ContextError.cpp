// Generated by Haxe 4.0.0-preview.4+1e3e5e0
#include <hxcpp.h>

#ifndef INCLUDED_mmvc_base_ContextError
#include <mmvc/base/ContextError.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_a30475ac699df3c9_34_new,"mmvc.base.ContextError","new",0xa048df47,"mmvc.base.ContextError.new","mmvc/base/ContextError.hx",34,0xdce075a9)
namespace mmvc{
namespace base{

void ContextError_obj::__construct(::String __o_message, ::Dynamic __o_id){
::String message = __o_message.Default(HX_("",00,00,00,00));
 ::Dynamic id = __o_id.Default(0);
            	HX_STACKFRAME(&_hx_pos_a30475ac699df3c9_34_new)
HXLINE(  35)		this->message = message;
HXLINE(  36)		this->id = ( (int)(id) );
            	}

Dynamic ContextError_obj::__CreateEmpty() { return new ContextError_obj; }

void *ContextError_obj::_hx_vtable = 0;

Dynamic ContextError_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< ContextError_obj > _hx_result = new ContextError_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool ContextError_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x108fa83b;
}


ContextError_obj::ContextError_obj()
{
}

void ContextError_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(ContextError);
	HX_MARK_MEMBER_NAME(message,"message");
	HX_MARK_MEMBER_NAME(id,"id");
	HX_MARK_END_CLASS();
}

void ContextError_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(message,"message");
	HX_VISIT_MEMBER_NAME(id,"id");
}

hx::Val ContextError_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"id") ) { return hx::Val( id ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"message") ) { return hx::Val( message ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val ContextError_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"id") ) { id=inValue.Cast< int >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"message") ) { message=inValue.Cast< ::String >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void ContextError_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("message",c7,35,11,9a));
	outFields->push(HX_("id",db,5b,00,00));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo ContextError_obj_sMemberStorageInfo[] = {
	{hx::fsString,(int)offsetof(ContextError_obj,message),HX_("message",c7,35,11,9a)},
	{hx::fsInt,(int)offsetof(ContextError_obj,id),HX_("id",db,5b,00,00)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *ContextError_obj_sStaticStorageInfo = 0;
#endif

static ::String ContextError_obj_sMemberFields[] = {
	HX_("message",c7,35,11,9a),
	HX_("id",db,5b,00,00),
	::String(null()) };

hx::Class ContextError_obj::__mClass;

void ContextError_obj::__register()
{
	ContextError_obj _hx_dummy;
	ContextError_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("mmvc.base.ContextError",d5,2f,f0,4f);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(ContextError_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< ContextError_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ContextError_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ContextError_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace mmvc
} // end namespace base
