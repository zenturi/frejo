// Generated by Haxe 4.0.0-preview.4+1e3e5e0
#include <hxcpp.h>

#ifndef INCLUDED_opengl__GL_IntRef_Impl_
#include <opengl/_GL/IntRef_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_7a25e0d40c4ad0ce_13_fromInt,"opengl._GL.IntRef_Impl_","fromInt",0xdbe27ce4,"opengl._GL.IntRef_Impl_.fromInt","opengl/GL.hx",13,0xd15e80d9)
namespace opengl{
namespace _GL{

void IntRef_Impl__obj::__construct() { }

Dynamic IntRef_Impl__obj::__CreateEmpty() { return new IntRef_Impl__obj; }

void *IntRef_Impl__obj::_hx_vtable = 0;

Dynamic IntRef_Impl__obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< IntRef_Impl__obj > _hx_result = new IntRef_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool IntRef_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x5df2f2b5;
}

::cpp::Pointer< int > IntRef_Impl__obj::fromInt(int _val){
            	HX_STACKFRAME(&_hx_pos_7a25e0d40c4ad0ce_13_fromInt)
HXDLIN(  13)		return ( (::cpp::Pointer< int >)(::cpp::Pointer_obj::addressOf(_val)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(IntRef_Impl__obj,fromInt,return )


IntRef_Impl__obj::IntRef_Impl__obj()
{
}

bool IntRef_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"fromInt") ) { outValue = fromInt_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo *IntRef_Impl__obj_sMemberStorageInfo = 0;
static hx::StaticInfo *IntRef_Impl__obj_sStaticStorageInfo = 0;
#endif

hx::Class IntRef_Impl__obj::__mClass;

static ::String IntRef_Impl__obj_sStaticFields[] = {
	HX_("fromInt",a5,dd,fa,57),
	::String(null())
};

void IntRef_Impl__obj::__register()
{
	IntRef_Impl__obj _hx_dummy;
	IntRef_Impl__obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("opengl._GL.IntRef_Impl_",ad,28,4b,34);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &IntRef_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(IntRef_Impl__obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< IntRef_Impl__obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = IntRef_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = IntRef_Impl__obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace opengl
} // end namespace _GL
