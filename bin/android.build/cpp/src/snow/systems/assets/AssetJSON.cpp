// Generated by Haxe 4.0.0-preview.4+1e3e5e0
#include <hxcpp.h>

#ifndef INCLUDED_haxe_format_JsonParser
#include <haxe/format/JsonParser.h>
#endif
#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_haxe_io_Path
#include <haxe/io/Path.h>
#endif
#ifndef INCLUDED_snow_Snow
#include <snow/Snow.h>
#endif
#ifndef INCLUDED_snow_api_Promise
#include <snow/api/Promise.h>
#endif
#ifndef INCLUDED_snow_api_buffers_ArrayBufferView
#include <snow/api/buffers/ArrayBufferView.h>
#endif
#ifndef INCLUDED_snow_systems_assets_Asset
#include <snow/systems/assets/Asset.h>
#endif
#ifndef INCLUDED_snow_systems_assets_AssetJSON
#include <snow/systems/assets/AssetJSON.h>
#endif
#ifndef INCLUDED_snow_systems_assets_Assets
#include <snow/systems/assets/Assets.h>
#endif
#ifndef INCLUDED_snow_systems_io_IO
#include <snow/systems/io/IO.h>
#endif
#ifndef INCLUDED_snow_types_Error
#include <snow/types/Error.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_ea2408c8d76b7a9e_414_new,"snow.systems.assets.AssetJSON","new",0xd67e7c94,"snow.systems.assets.AssetJSON.new","snow/systems/assets/Asset.hx",414,0x7a5509c3)
HX_LOCAL_STACK_FRAME(_hx_pos_ea2408c8d76b7a9e_428_reload,"snow.systems.assets.AssetJSON","reload",0xb7073fa5,"snow.systems.assets.AssetJSON.reload","snow/systems/assets/Asset.hx",428,0x7a5509c3)
HX_LOCAL_STACK_FRAME(_hx_pos_ea2408c8d76b7a9e_424_reload,"snow.systems.assets.AssetJSON","reload",0xb7073fa5,"snow.systems.assets.AssetJSON.reload","snow/systems/assets/Asset.hx",424,0x7a5509c3)
HX_LOCAL_STACK_FRAME(_hx_pos_ea2408c8d76b7a9e_440_destroy,"snow.systems.assets.AssetJSON","destroy",0x344d032e,"snow.systems.assets.AssetJSON.destroy","snow/systems/assets/Asset.hx",440,0x7a5509c3)
HX_LOCAL_STACK_FRAME(_hx_pos_ea2408c8d76b7a9e_478_set_json,"snow.systems.assets.AssetJSON","set_json",0x32b4ee71,"snow.systems.assets.AssetJSON.set_json","snow/systems/assets/Asset.hx",478,0x7a5509c3)
HX_LOCAL_STACK_FRAME(_hx_pos_ea2408c8d76b7a9e_448_load,"snow.systems.assets.AssetJSON","load",0xd6e39b72,"snow.systems.assets.AssetJSON.load","snow/systems/assets/Asset.hx",448,0x7a5509c3)
HX_LOCAL_STACK_FRAME(_hx_pos_ea2408c8d76b7a9e_457_processor,"snow.systems.assets.AssetJSON","processor",0x82db8886,"snow.systems.assets.AssetJSON.processor","snow/systems/assets/Asset.hx",457,0x7a5509c3)
HX_LOCAL_STACK_FRAME(_hx_pos_ea2408c8d76b7a9e_453_processor,"snow.systems.assets.AssetJSON","processor",0x82db8886,"snow.systems.assets.AssetJSON.processor","snow/systems/assets/Asset.hx",453,0x7a5509c3)
namespace snow{
namespace systems{
namespace assets{

void AssetJSON_obj::__construct( ::snow::systems::assets::Assets _system,::String _id, ::Dynamic _json){
            	HX_STACKFRAME(&_hx_pos_ea2408c8d76b7a9e_414_new)
HXLINE( 416)		super::__construct(_system,_id,3);
HXLINE( 417)		this->set_json(_json);
            	}

Dynamic AssetJSON_obj::__CreateEmpty() { return new AssetJSON_obj; }

void *AssetJSON_obj::_hx_vtable = 0;

Dynamic AssetJSON_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< AssetJSON_obj > _hx_result = new AssetJSON_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2]);
	return _hx_result;
}

bool AssetJSON_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x1c62f674) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x1c62f674;
	} else {
		return inClassId==(int)0x3efde4b0;
	}
}

 ::snow::api::Promise AssetJSON_obj::reload(){
            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_1, ::snow::systems::assets::AssetJSON,_gthis) HXARGC(2)
            		void _hx_run( ::Dynamic resolve, ::Dynamic reject){
            			HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_0, ::snow::systems::assets::AssetJSON,_gthis, ::Dynamic,resolve) HXARGC(1)
            			void _hx_run( ::Dynamic _json){
            				HX_STACKFRAME(&_hx_pos_ea2408c8d76b7a9e_428_reload)
HXLINE( 430)				_gthis->set_json(_json);
HXLINE( 431)				resolve(_gthis);
            			}
            			HX_END_LOCAL_FUNC1((void))

            			HX_STACKFRAME(&_hx_pos_ea2408c8d76b7a9e_428_reload)
HXLINE( 428)			 ::snow::systems::io::IO _gthis1 = _gthis->_hx_system->app->io;
HXDLIN( 428)			_gthis1->data_flow(::haxe::io::Path_obj::join(::Array_obj< ::String >::__new(2)->init(0,_gthis->_hx_system->root)->init(1,_gthis->id)),::snow::systems::assets::AssetJSON_obj::processor_dyn(),null())->then( ::Dynamic(new _hx_Closure_0(_gthis,resolve)),null())->error(reject);
            		}
            		HX_END_LOCAL_FUNC2((void))

            	HX_GC_STACKFRAME(&_hx_pos_ea2408c8d76b7a9e_424_reload)
HXDLIN( 424)		 ::snow::systems::assets::AssetJSON _gthis = hx::ObjectPtr<OBJ_>(this);
HXLINE( 426)		return  ::snow::api::Promise_obj::__alloc( HX_CTX , ::Dynamic(new _hx_Closure_1(_gthis)));
            	}


HX_DEFINE_DYNAMIC_FUNC0(AssetJSON_obj,reload,return )

void AssetJSON_obj::destroy(){
            	HX_STACKFRAME(&_hx_pos_ea2408c8d76b7a9e_440_destroy)
HXDLIN( 440)		this->set_json(null());
            	}


 ::Dynamic AssetJSON_obj::set_json( ::Dynamic _json){
            	HX_STACKFRAME(&_hx_pos_ea2408c8d76b7a9e_478_set_json)
HXLINE( 480)		this->loaded = hx::IsNotNull( _json );
HXLINE( 481)		return (this->json = _json);
            	}


HX_DEFINE_DYNAMIC_FUNC1(AssetJSON_obj,set_json,return )

 ::snow::api::Promise AssetJSON_obj::load( ::snow::systems::assets::Assets _system,::String _id){
            	HX_GC_STACKFRAME(&_hx_pos_ea2408c8d76b7a9e_448_load)
HXDLIN( 448)		return  ::snow::systems::assets::AssetJSON_obj::__alloc( HX_CTX ,_system,_id,null())->reload();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AssetJSON_obj,load,return )

 ::snow::api::Promise AssetJSON_obj::processor( ::snow::Snow _app,::String _id, ::snow::api::buffers::ArrayBufferView _data){
            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0,::Array< ::Dynamic>,_data1) HXARGC(2)
            		 ::Dynamic _hx_run( ::Dynamic resolve, ::Dynamic reject){
            			HX_GC_STACKFRAME(&_hx_pos_ea2408c8d76b7a9e_457_processor)
HXLINE( 459)			 ::Dynamic _data_json = null();
HXLINE( 461)			try {
            				HX_STACK_CATCHABLE( ::Dynamic, 0);
HXLINE( 462)				_data_json =  ::haxe::format::JsonParser_obj::__alloc( HX_CTX ,::haxe::io::Bytes_obj::ofData(_data1->__get(0).StaticCast<  ::snow::api::buffers::ArrayBufferView >()->buffer)->toString())->doParse();
HXLINE( 463)				_data1[0] = null();
            			}
            			catch( ::Dynamic _hx_e){
            				if (_hx_e.IsClass<  ::Dynamic >() ){
            					HX_STACK_BEGIN_CATCH
            					 ::Dynamic e = _hx_e;
HXLINE( 465)					_data1[0] = null();
HXLINE( 466)					return reject(::snow::types::Error_obj::parse(e));
            				}
            				else {
            					HX_STACK_DO_THROW(_hx_e);
            				}
            			}
HXLINE( 469)			return resolve(_data_json);
            		}
            		HX_END_LOCAL_FUNC2(return)

            	HX_GC_STACKFRAME(&_hx_pos_ea2408c8d76b7a9e_453_processor)
HXDLIN( 453)		::Array< ::Dynamic> _data1 = ::Array_obj< ::Dynamic>::__new(1)->init(0,_data);
HXLINE( 455)		if (hx::IsNull( _data1->__get(0).StaticCast<  ::snow::api::buffers::ArrayBufferView >() )) {
HXLINE( 455)			return ::snow::api::Promise_obj::reject(::snow::types::Error_obj::error(HX_("AssetJSON: data was null",36,36,57,6d)));
            		}
HXLINE( 457)		return  ::snow::api::Promise_obj::__alloc( HX_CTX , ::Dynamic(new _hx_Closure_0(_data1)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(AssetJSON_obj,processor,return )


hx::ObjectPtr< AssetJSON_obj > AssetJSON_obj::__new( ::snow::systems::assets::Assets _system,::String _id, ::Dynamic _json) {
	hx::ObjectPtr< AssetJSON_obj > __this = new AssetJSON_obj();
	__this->__construct(_system,_id,_json);
	return __this;
}

hx::ObjectPtr< AssetJSON_obj > AssetJSON_obj::__alloc(hx::Ctx *_hx_ctx, ::snow::systems::assets::Assets _system,::String _id, ::Dynamic _json) {
	AssetJSON_obj *__this = (AssetJSON_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(AssetJSON_obj), true, "snow.systems.assets.AssetJSON"));
	*(void **)__this = AssetJSON_obj::_hx_vtable;
	__this->__construct(_system,_id,_json);
	return __this;
}

AssetJSON_obj::AssetJSON_obj()
{
}

void AssetJSON_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(AssetJSON);
	HX_MARK_MEMBER_NAME(json,"json");
	 ::snow::systems::assets::Asset_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void AssetJSON_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(json,"json");
	 ::snow::systems::assets::Asset_obj::__Visit(HX_VISIT_ARG);
}

hx::Val AssetJSON_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"json") ) { return hx::Val( json ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"reload") ) { return hx::Val( reload_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"destroy") ) { return hx::Val( destroy_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"set_json") ) { return hx::Val( set_json_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool AssetJSON_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"load") ) { outValue = load_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"processor") ) { outValue = processor_dyn(); return true; }
	}
	return false;
}

hx::Val AssetJSON_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"json") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_json(inValue.Cast<  ::Dynamic >()) );json=inValue.Cast<  ::Dynamic >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void AssetJSON_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("json",28,42,68,46));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo AssetJSON_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(AssetJSON_obj,json),HX_("json",28,42,68,46)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *AssetJSON_obj_sStaticStorageInfo = 0;
#endif

static ::String AssetJSON_obj_sMemberFields[] = {
	HX_("json",28,42,68,46),
	HX_("reload",59,53,df,03),
	HX_("destroy",fa,2c,86,24),
	HX_("set_json",25,57,80,74),
	::String(null()) };

hx::Class AssetJSON_obj::__mClass;

static ::String AssetJSON_obj_sStaticFields[] = {
	HX_("load",26,9a,b7,47),
	HX_("processor",52,bd,0b,d3),
	::String(null())
};

void AssetJSON_obj::__register()
{
	AssetJSON_obj _hx_dummy;
	AssetJSON_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("snow.systems.assets.AssetJSON",a2,e2,3f,56);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &AssetJSON_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(AssetJSON_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(AssetJSON_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< AssetJSON_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = AssetJSON_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = AssetJSON_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace snow
} // end namespace systems
} // end namespace assets
