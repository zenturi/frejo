// Generated by Haxe 4.0.0-preview.4+1e3e5e0
#include <hxcpp.h>

#ifndef INCLUDED_snow_types__Types_ExtensionsInit
#include <snow/types/_Types/ExtensionsInit.h>
#endif

namespace snow{
namespace types{
namespace _Types{

void ExtensionsInit_obj::__construct() { }

Dynamic ExtensionsInit_obj::__CreateEmpty() { return new ExtensionsInit_obj; }

void *ExtensionsInit_obj::_hx_vtable = 0;

Dynamic ExtensionsInit_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< ExtensionsInit_obj > _hx_result = new ExtensionsInit_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool ExtensionsInit_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x1239b430;
}


ExtensionsInit_obj::ExtensionsInit_obj()
{
}

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo *ExtensionsInit_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *ExtensionsInit_obj_sStaticStorageInfo = 0;
#endif

hx::Class ExtensionsInit_obj::__mClass;

void ExtensionsInit_obj::__register()
{
	ExtensionsInit_obj _hx_dummy;
	ExtensionsInit_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("snow.types._Types.ExtensionsInit",98,73,ac,14);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< ExtensionsInit_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ExtensionsInit_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ExtensionsInit_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace snow
} // end namespace types
} // end namespace _Types
