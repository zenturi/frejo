// Generated by Haxe 4.0.0-preview.4+1e3e5e0
#include <hxcpp.h>

#ifndef INCLUDED_nanovg_NvgPatternRepeat
#include <nanovg/NvgPatternRepeat.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_b88fbed94a6ca46a_44_boot,"nanovg.NvgPatternRepeat","boot",0xddedeccb,"nanovg.NvgPatternRepeat.boot","nanovg/Nvg.hx",44,0xe87479c9)
HX_LOCAL_STACK_FRAME(_hx_pos_b88fbed94a6ca46a_45_boot,"nanovg.NvgPatternRepeat","boot",0xddedeccb,"nanovg.NvgPatternRepeat.boot","nanovg/Nvg.hx",45,0xe87479c9)
HX_LOCAL_STACK_FRAME(_hx_pos_b88fbed94a6ca46a_46_boot,"nanovg.NvgPatternRepeat","boot",0xddedeccb,"nanovg.NvgPatternRepeat.boot","nanovg/Nvg.hx",46,0xe87479c9)
namespace nanovg{

void NvgPatternRepeat_obj::__construct() { }

Dynamic NvgPatternRepeat_obj::__CreateEmpty() { return new NvgPatternRepeat_obj; }

void *NvgPatternRepeat_obj::_hx_vtable = 0;

Dynamic NvgPatternRepeat_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< NvgPatternRepeat_obj > _hx_result = new NvgPatternRepeat_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool NvgPatternRepeat_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x407f32b1;
}

int NvgPatternRepeat_obj::NOREPEAT;

int NvgPatternRepeat_obj::REPEATX;

int NvgPatternRepeat_obj::REPEATY;


NvgPatternRepeat_obj::NvgPatternRepeat_obj()
{
}

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo *NvgPatternRepeat_obj_sMemberStorageInfo = 0;
static hx::StaticInfo NvgPatternRepeat_obj_sStaticStorageInfo[] = {
	{hx::fsInt,(void *) &NvgPatternRepeat_obj::NOREPEAT,HX_("NOREPEAT",5c,ae,7d,fb)},
	{hx::fsInt,(void *) &NvgPatternRepeat_obj::REPEATX,HX_("REPEATX",9d,ac,5b,26)},
	{hx::fsInt,(void *) &NvgPatternRepeat_obj::REPEATY,HX_("REPEATY",9e,ac,5b,26)},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void NvgPatternRepeat_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(NvgPatternRepeat_obj::NOREPEAT,"NOREPEAT");
	HX_MARK_MEMBER_NAME(NvgPatternRepeat_obj::REPEATX,"REPEATX");
	HX_MARK_MEMBER_NAME(NvgPatternRepeat_obj::REPEATY,"REPEATY");
};

#ifdef HXCPP_VISIT_ALLOCS
static void NvgPatternRepeat_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(NvgPatternRepeat_obj::NOREPEAT,"NOREPEAT");
	HX_VISIT_MEMBER_NAME(NvgPatternRepeat_obj::REPEATX,"REPEATX");
	HX_VISIT_MEMBER_NAME(NvgPatternRepeat_obj::REPEATY,"REPEATY");
};

#endif

hx::Class NvgPatternRepeat_obj::__mClass;

static ::String NvgPatternRepeat_obj_sStaticFields[] = {
	HX_("NOREPEAT",5c,ae,7d,fb),
	HX_("REPEATX",9d,ac,5b,26),
	HX_("REPEATY",9e,ac,5b,26),
	::String(null())
};

void NvgPatternRepeat_obj::__register()
{
	NvgPatternRepeat_obj _hx_dummy;
	NvgPatternRepeat_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("nanovg.NvgPatternRepeat",75,be,6c,ae);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = NvgPatternRepeat_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(NvgPatternRepeat_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< NvgPatternRepeat_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = NvgPatternRepeat_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = NvgPatternRepeat_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = NvgPatternRepeat_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void NvgPatternRepeat_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_b88fbed94a6ca46a_44_boot)
HXDLIN(  44)		NOREPEAT = 0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_b88fbed94a6ca46a_45_boot)
HXDLIN(  45)		REPEATX = 1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_b88fbed94a6ca46a_46_boot)
HXDLIN(  46)		REPEATY = 2;
            	}
}

} // end namespace nanovg
