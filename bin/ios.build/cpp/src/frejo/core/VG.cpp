// Generated by Haxe 4.0.0-preview.4+1e3e5e0
#include <hxcpp.h>

#ifndef INCLUDED_ab47325cc4883df2
#define INCLUDED_ab47325cc4883df2
#include "linc_nanovg.h"
#endif
#ifndef INCLUDED_frejo_core_VG
#include <frejo/core/VG.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_9b09dd08190ad881_24_new,"frejo.core.VG","new",0xe4ef1202,"frejo.core.VG.new","frejo/core/VG.hx",24,0xc25e6b4e)
HX_LOCAL_STACK_FRAME(_hx_pos_9b09dd08190ad881_32_beginFrame,"frejo.core.VG","beginFrame",0x31f79fe2,"frejo.core.VG.beginFrame","frejo/core/VG.hx",32,0xc25e6b4e)
HX_LOCAL_STACK_FRAME(_hx_pos_9b09dd08190ad881_36_endFrame,"frejo.core.VG","endFrame",0x864a9d70,"frejo.core.VG.endFrame","frejo/core/VG.hx",36,0xc25e6b4e)
HX_LOCAL_STACK_FRAME(_hx_pos_9b09dd08190ad881_48_rgba,"frejo.core.VG","rgba",0x6ee6fcd2,"frejo.core.VG.rgba","frejo/core/VG.hx",48,0xc25e6b4e)
HX_LOCAL_STACK_FRAME(_hx_pos_9b09dd08190ad881_96_fillColor,"frejo.core.VG","fillColor",0x279abf02,"frejo.core.VG.fillColor","frejo/core/VG.hx",96,0xc25e6b4e)
HX_LOCAL_STACK_FRAME(_hx_pos_9b09dd08190ad881_288_rect,"frejo.core.VG","rect",0x6ee57942,"frejo.core.VG.rect","frejo/core/VG.hx",288,0xc25e6b4e)
HX_LOCAL_STACK_FRAME(_hx_pos_9b09dd08190ad881_304_fill,"frejo.core.VG","fill",0x66f9faa1,"frejo.core.VG.fill","frejo/core/VG.hx",304,0xc25e6b4e)
HX_LOCAL_STACK_FRAME(_hx_pos_9b09dd08190ad881_15_getInstance,"frejo.core.VG","getInstance",0xbfdd95ed,"frejo.core.VG.getInstance","frejo/core/VG.hx",15,0xc25e6b4e)
namespace frejo{
namespace core{

void VG_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_9b09dd08190ad881_24_new)
HXDLIN(  24)		this->context = nanovg::nvgCreateGL(3);
            	}

Dynamic VG_obj::__CreateEmpty() { return new VG_obj; }

void *VG_obj::_hx_vtable = 0;

Dynamic VG_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< VG_obj > _hx_result = new VG_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool VG_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x10a229ae;
}

void VG_obj::beginFrame(int windowWidth,int windowHeight,Float devicePixelRatio){
            	HX_STACKFRAME(&_hx_pos_9b09dd08190ad881_32_beginFrame)
HXDLIN(  32)		::cpp::Pointer<  NVGcontext > tmp = this->context;
HXDLIN(  32)		::nvgBeginFrame(tmp,windowWidth,windowHeight,devicePixelRatio);
            	}


HX_DEFINE_DYNAMIC_FUNC3(VG_obj,beginFrame,(void))

void VG_obj::endFrame(){
            	HX_STACKFRAME(&_hx_pos_9b09dd08190ad881_36_endFrame)
HXDLIN(  36)		::cpp::Pointer<  NVGcontext > tmp = this->context;
HXDLIN(  36)		::nvgEndFrame(tmp);
            	}


HX_DEFINE_DYNAMIC_FUNC0(VG_obj,endFrame,(void))

 NVGcolor VG_obj::rgba(unsigned char r,unsigned char g,unsigned char b,unsigned char a){
            	HX_STACKFRAME(&_hx_pos_9b09dd08190ad881_48_rgba)
HXDLIN(  48)		return ::nvgRGBA(r,g,b,a);
            	}


void VG_obj::fillColor( NVGcolor color){
            	HX_STACKFRAME(&_hx_pos_9b09dd08190ad881_96_fillColor)
HXDLIN(  96)		::cpp::Pointer<  NVGcontext > tmp = this->context;
HXDLIN(  96)		::nvgFillColor(tmp,color);
            	}


void VG_obj::rect(Float x,Float y,Float w,Float h){
            	HX_STACKFRAME(&_hx_pos_9b09dd08190ad881_288_rect)
HXDLIN( 288)		::cpp::Pointer<  NVGcontext > tmp = this->context;
HXDLIN( 288)		::nvgRect(tmp,x,y,w,h);
            	}


HX_DEFINE_DYNAMIC_FUNC4(VG_obj,rect,(void))

void VG_obj::fill(){
            	HX_STACKFRAME(&_hx_pos_9b09dd08190ad881_304_fill)
HXDLIN( 304)		::cpp::Pointer<  NVGcontext > tmp = this->context;
HXDLIN( 304)		::nvgFill(tmp);
            	}


HX_DEFINE_DYNAMIC_FUNC0(VG_obj,fill,(void))

 ::frejo::core::VG VG_obj::vg;

 ::frejo::core::VG VG_obj::getInstance(){
            	HX_GC_STACKFRAME(&_hx_pos_9b09dd08190ad881_15_getInstance)
HXLINE(  16)		if (hx::IsNull( ::frejo::core::VG_obj::vg )) {
HXLINE(  17)			::frejo::core::VG_obj::vg =  ::frejo::core::VG_obj::__alloc( HX_CTX );
HXLINE(  18)			return ::frejo::core::VG_obj::vg;
            		}
HXLINE(  20)		return ::frejo::core::VG_obj::vg;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(VG_obj,getInstance,return )


hx::ObjectPtr< VG_obj > VG_obj::__new() {
	hx::ObjectPtr< VG_obj > __this = new VG_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< VG_obj > VG_obj::__alloc(hx::Ctx *_hx_ctx) {
	VG_obj *__this = (VG_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(VG_obj), true, "frejo.core.VG"));
	*(void **)__this = VG_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

VG_obj::VG_obj()
{
}

void VG_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(VG);
	HX_MARK_MEMBER_NAME(context,"context");
	HX_MARK_END_CLASS();
}

void VG_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(context,"context");
}

hx::Val VG_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"rect") ) { return hx::Val( rect_dyn() ); }
		if (HX_FIELD_EQ(inName,"fill") ) { return hx::Val( fill_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"context") ) { return hx::Val( context ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"endFrame") ) { return hx::Val( endFrame_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"beginFrame") ) { return hx::Val( beginFrame_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool VG_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"vg") ) { outValue = ( vg ); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"getInstance") ) { outValue = getInstance_dyn(); return true; }
	}
	return false;
}

hx::Val VG_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"context") ) { context=inValue.Cast< ::cpp::Pointer<  NVGcontext > >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool VG_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"vg") ) { vg=ioValue.Cast<  ::frejo::core::VG >(); return true; }
	}
	return false;
}

void VG_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("context",ef,95,77,19));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo VG_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::cpp::Pointer< NVGcontext >*/ ,(int)offsetof(VG_obj,context),HX_("context",ef,95,77,19)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo VG_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*::frejo::core::VG*/ ,(void *) &VG_obj::vg,HX_("vg",31,67,00,00)},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String VG_obj_sMemberFields[] = {
	HX_("context",ef,95,77,19),
	HX_("beginFrame",44,89,4c,7c),
	HX_("endFrame",52,0a,81,04),
	HX_("rect",24,4d,a7,4b),
	HX_("fill",83,ce,bb,43),
	::String(null()) };

static void VG_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(VG_obj::vg,"vg");
};

#ifdef HXCPP_VISIT_ALLOCS
static void VG_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(VG_obj::vg,"vg");
};

#endif

hx::Class VG_obj::__mClass;

static ::String VG_obj_sStaticFields[] = {
	HX_("vg",31,67,00,00),
	HX_("getInstance",4b,e2,d4,7f),
	::String(null())
};

void VG_obj::__register()
{
	VG_obj _hx_dummy;
	VG_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("frejo.core.VG",10,a9,41,a3);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &VG_obj::__GetStatic;
	__mClass->mSetStaticField = &VG_obj::__SetStatic;
	__mClass->mMarkFunc = VG_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(VG_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(VG_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< VG_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = VG_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = VG_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = VG_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace frejo
} // end namespace core
