// Generated by Haxe 4.0.0-preview.4+1e3e5e0
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_9484b18fc186cc5e
#define INCLUDED_9484b18fc186cc5e
#include "linc_opengl.h"
#endif
#ifndef INCLUDED_frejo_app_Application
#include <frejo/app/Application.h>
#endif
#ifndef INCLUDED_frejo_app_Context
#include <frejo/app/Context.h>
#endif
#ifndef INCLUDED_frejo_app_View
#include <frejo/app/View.h>
#endif
#ifndef INCLUDED_frejo_core_View
#include <frejo/core/View.h>
#endif
#ifndef INCLUDED_haxe_Log
#include <haxe/Log.h>
#endif
#ifndef INCLUDED_mmvc_api_IContext
#include <mmvc/api/IContext.h>
#endif
#ifndef INCLUDED_mmvc_api_IViewContainer
#include <mmvc/api/IViewContainer.h>
#endif
#ifndef INCLUDED_mmvc_impl_Context
#include <mmvc/impl/Context.h>
#endif
#ifndef INCLUDED_msignal_Signal
#include <msignal/Signal.h>
#endif
#ifndef INCLUDED_msignal_Signal1
#include <msignal/Signal1.h>
#endif
#ifndef INCLUDED_msignal_Slot
#include <msignal/Slot.h>
#endif
#ifndef INCLUDED_msignal_Slot1
#include <msignal/Slot1.h>
#endif
#ifndef INCLUDED_snow_App
#include <snow/App.h>
#endif
#ifndef INCLUDED_snow_Snow
#include <snow/Snow.h>
#endif
#ifndef INCLUDED_snow_core_Runtime
#include <snow/core/Runtime.h>
#endif
#ifndef INCLUDED_snow_core_native_Runtime
#include <snow/core/native/Runtime.h>
#endif
#ifndef INCLUDED_snow_modules_sdl_Runtime
#include <snow/modules/sdl/Runtime.h>
#endif
#ifndef INCLUDED_snow_types_SystemEvent
#include <snow/types/SystemEvent.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_19a1259070094d70_9_new,"frejo.app.Application","new",0x589f0485,"frejo.app.Application.new","frejo/app/Application.hx",9,0x86ea668d)
HX_LOCAL_STACK_FRAME(_hx_pos_19a1259070094d70_36_ready,"frejo.app.Application","ready",0x4f56e7c8,"frejo.app.Application.ready","frejo/app/Application.hx",36,0x86ea668d)
HX_LOCAL_STACK_FRAME(_hx_pos_19a1259070094d70_55_config,"frejo.app.Application","config",0xe7f487bd,"frejo.app.Application.config","frejo/app/Application.hx",55,0x86ea668d)
HX_LOCAL_STACK_FRAME(_hx_pos_19a1259070094d70_73_update,"frejo.app.Application","update",0xa727b704,"frejo.app.Application.update","frejo/app/Application.hx",73,0x86ea668d)
HX_LOCAL_STACK_FRAME(_hx_pos_19a1259070094d70_77_tick,"frejo.app.Application","tick",0x367f2f98,"frejo.app.Application.tick","frejo/app/Application.hx",77,0x86ea668d)
HX_LOCAL_STACK_FRAME(_hx_pos_19a1259070094d70_81_draw,"frejo.app.Application","draw",0x2bf2983f,"frejo.app.Application.draw","frejo/app/Application.hx",81,0x86ea668d)
HX_LOCAL_STACK_FRAME(_hx_pos_19a1259070094d70_89_onevent,"frejo.app.Application","onevent",0x769da140,"frejo.app.Application.onevent","frejo/app/Application.hx",89,0x86ea668d)
HX_LOCAL_STACK_FRAME(_hx_pos_19a1259070094d70_25_getInstance,"frejo.app.Application","getInstance",0x21584370,"frejo.app.Application.getInstance","frejo/app/Application.hx",25,0x86ea668d)
namespace frejo{
namespace app{

void Application_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_19a1259070094d70_9_new)
HXLINE(  11)		this->window_height = 320;
HXLINE(  10)		this->window_width = 640;
HXLINE(  32)		super::__construct();
HXLINE(  33)		::frejo::app::Application_obj::instance = hx::ObjectPtr<OBJ_>(this);
            	}

Dynamic Application_obj::__CreateEmpty() { return new Application_obj; }

void *Application_obj::_hx_vtable = 0;

Dynamic Application_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Application_obj > _hx_result = new Application_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Application_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x1888ac0d) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x1888ac0d;
	} else {
		return inClassId==(int)0x7e2b5c5e;
	}
}

void Application_obj::ready(){
            	HX_GC_STACKFRAME(&_hx_pos_19a1259070094d70_36_ready)
HXLINE(  37)		this->pixelRatio = this->app->runtime->window_device_pixel_ratio();
HXLINE(  38)		this->render_width = this->app->runtime->window_w;
HXLINE(  39)		this->render_height = this->app->runtime->window_h;
HXLINE(  42)		this->window_width = ::Math_obj::floor((( (Float)(this->render_width) ) / this->pixelRatio));
HXLINE(  43)		this->window_height = ::Math_obj::floor((( (Float)(this->render_height) ) / this->pixelRatio));
HXLINE(  45)		this->app->runtime->window_fullscreen(false,false);
HXLINE(  47)		this->applicationView =  ::frejo::app::View_obj::__alloc( HX_CTX );
HXLINE(  48)		this->applicationView->app = hx::ObjectPtr<OBJ_>(this);
HXLINE(  49)		this->applicationView->init();
HXLINE(  51)		this->signal->add(this->applicationView->system_event_dyn()).StaticCast<  ::msignal::Slot1 >();
HXLINE(  52)		this->applicationContext =  ::frejo::app::Context_obj::__alloc( HX_CTX ,this->applicationView);
            	}


HX_DEFINE_DYNAMIC_FUNC0(Application_obj,ready,(void))

 ::Dynamic Application_obj::config( ::Dynamic config){
            	HX_STACKFRAME(&_hx_pos_19a1259070094d70_55_config)
HXLINE(  56)		this->render_width = ( (int)( ::Dynamic(config->__Field(HX_("window",f0,93,8c,52),hx::paccDynamic))->__Field(HX_("width",06,b6,62,ca),hx::paccDynamic)) );
HXLINE(  57)		this->render_height = ( (int)( ::Dynamic(config->__Field(HX_("window",f0,93,8c,52),hx::paccDynamic))->__Field(HX_("height",e7,07,4c,02),hx::paccDynamic)) );
HXLINE(  62)		 ::Dynamic( ::Dynamic(config->__Field(HX_("render",56,6b,29,05),hx::paccDynamic))->__Field(HX_("opengl",6f,64,94,21),hx::paccDynamic))->__SetField(HX_("profile",29,49,49,f3),2,hx::paccDynamic);
HXLINE(  66)		 ::Dynamic(config->__Field(HX_("render",56,6b,29,05),hx::paccDynamic))->__SetField(HX_("stencil",fc,bd,03,80),8,hx::paccDynamic);
HXLINE(  67)		 ::Dynamic(config->__Field(HX_("render",56,6b,29,05),hx::paccDynamic))->__SetField(HX_("depth",03,f1,29,d7),24,hx::paccDynamic);
HXLINE(  69)		return config;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Application_obj,config,return )

void Application_obj::update(Float dt){
            	HX_STACKFRAME(&_hx_pos_19a1259070094d70_73_update)
HXDLIN(  73)		this->applicationView->update(dt);
            	}


void Application_obj::tick(Float dt){
            	HX_STACKFRAME(&_hx_pos_19a1259070094d70_77_tick)
HXDLIN(  77)		this->draw(dt);
            	}


void Application_obj::draw(Float tick){
            	HX_STACKFRAME(&_hx_pos_19a1259070094d70_81_draw)
HXLINE(  82)		glViewport(0,0,this->render_width,this->render_height);
HXLINE(  83)		glClearColor(( (float)(((Float)0.7)) ),( (float)(((Float)0.7)) ),( (float)(((Float)0.7)) ),( (float)(((Float)0.3)) ));
HXLINE(  84)		glClear(17664);
HXLINE(  86)		this->applicationView->draw(tick);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Application_obj,draw,(void))

void Application_obj::onevent( ::snow::types::SystemEvent event){
            	HX_GC_STACKFRAME(&_hx_pos_19a1259070094d70_89_onevent)
HXLINE(  90)		if ((event->type != 3)) {
HXLINE(  91)			 ::Dynamic _hx_tmp = ::haxe::Log_obj::trace;
HXDLIN(  91)			int this1 = event->type;
HXDLIN(  91)			::String _hx_tmp1;
HXDLIN(  91)			switch((int)(this1)){
            				case (int)0: {
HXLINE(  91)					_hx_tmp1 = HX_("se_unknown",9d,c3,e5,b5);
            				}
            				break;
            				case (int)1: {
HXLINE(  91)					_hx_tmp1 = HX_("se_init",1d,21,fc,08);
            				}
            				break;
            				case (int)2: {
HXLINE(  91)					_hx_tmp1 = HX_("se_ready",b6,05,43,fc);
            				}
            				break;
            				case (int)3: {
HXLINE(  91)					_hx_tmp1 = HX_("se_tick",6a,a9,3d,10);
            				}
            				break;
            				case (int)4: {
HXLINE(  91)					_hx_tmp1 = HX_("se_freeze",a4,cd,f4,70);
            				}
            				break;
            				case (int)5: {
HXLINE(  91)					_hx_tmp1 = HX_("se_unfreeze",fd,29,4d,ba);
            				}
            				break;
            				case (int)7: {
HXLINE(  91)					_hx_tmp1 = HX_("se_shutdown",23,6d,ed,73);
            				}
            				break;
            				case (int)8: {
HXLINE(  91)					_hx_tmp1 = HX_("se_window",3d,d7,5c,14);
            				}
            				break;
            				case (int)9: {
HXLINE(  91)					_hx_tmp1 = HX_("se_input",5d,29,a6,d3);
            				}
            				break;
            				case (int)10: {
HXLINE(  91)					_hx_tmp1 = HX_("se_quit",dc,25,4b,0e);
            				}
            				break;
            				case (int)11: {
HXLINE(  91)					_hx_tmp1 = HX_("se_app_terminating",13,b9,f1,1d);
            				}
            				break;
            				case (int)12: {
HXLINE(  91)					_hx_tmp1 = HX_("se_app_lowmemory",8a,22,cd,92);
            				}
            				break;
            				case (int)13: {
HXLINE(  91)					_hx_tmp1 = HX_("se_app_willenterbackground",69,64,7f,c1);
            				}
            				break;
            				case (int)14: {
HXLINE(  91)					_hx_tmp1 = HX_("se_app_didenterbackground",12,ce,28,14);
            				}
            				break;
            				case (int)15: {
HXLINE(  91)					_hx_tmp1 = HX_("se_app_willenterforeground",3e,e9,50,ac);
            				}
            				break;
            				case (int)16: {
HXLINE(  91)					_hx_tmp1 = HX_("se_app_didenterforeground",e7,52,fa,fe);
            				}
            				break;
            				default:{
HXLINE(  91)					_hx_tmp1 = (HX_("",00,00,00,00) + this1);
            				}
            			}
HXDLIN(  91)			_hx_tmp((HX_("System Event: ",0f,53,59,ac) + _hx_tmp1),hx::SourceInfo(HX_("src/frejo/app/Application.hx",58,90,20,70),91,HX_("frejo.app.Application",13,5e,3f,93),HX_("onevent",9b,f6,d4,78)));
            		}
HXLINE(  92)		if (hx::IsNull( this->signal )) {
HXLINE(  93)			this->signal =  ::msignal::Signal1_obj::__alloc( HX_CTX ,null());
            		}
HXLINE(  95)		if ((event->type != 3)) {
HXLINE(  96)			this->signal->dispatch(event);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Application_obj,onevent,(void))

 ::frejo::app::Application Application_obj::instance;

 ::frejo::app::Application Application_obj::getInstance(){
            	HX_GC_STACKFRAME(&_hx_pos_19a1259070094d70_25_getInstance)
HXDLIN(  25)		if (hx::IsNull( ::frejo::app::Application_obj::instance )) {
HXLINE(  26)			return  ::frejo::app::Application_obj::__alloc( HX_CTX );
            		}
            		else {
HXLINE(  28)			return ::frejo::app::Application_obj::instance;
            		}
HXLINE(  25)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Application_obj,getInstance,return )


hx::ObjectPtr< Application_obj > Application_obj::__new() {
	hx::ObjectPtr< Application_obj > __this = new Application_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< Application_obj > Application_obj::__alloc(hx::Ctx *_hx_ctx) {
	Application_obj *__this = (Application_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Application_obj), true, "frejo.app.Application"));
	*(void **)__this = Application_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

Application_obj::Application_obj()
{
}

void Application_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Application);
	HX_MARK_MEMBER_NAME(window_width,"window_width");
	HX_MARK_MEMBER_NAME(window_height,"window_height");
	HX_MARK_MEMBER_NAME(applicationContext,"applicationContext");
	HX_MARK_MEMBER_NAME(applicationView,"applicationView");
	HX_MARK_MEMBER_NAME(pixelRatio,"pixelRatio");
	HX_MARK_MEMBER_NAME(render_width,"render_width");
	HX_MARK_MEMBER_NAME(render_height,"render_height");
	HX_MARK_MEMBER_NAME(signal,"signal");
	 ::snow::App_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void Application_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(window_width,"window_width");
	HX_VISIT_MEMBER_NAME(window_height,"window_height");
	HX_VISIT_MEMBER_NAME(applicationContext,"applicationContext");
	HX_VISIT_MEMBER_NAME(applicationView,"applicationView");
	HX_VISIT_MEMBER_NAME(pixelRatio,"pixelRatio");
	HX_VISIT_MEMBER_NAME(render_width,"render_width");
	HX_VISIT_MEMBER_NAME(render_height,"render_height");
	HX_VISIT_MEMBER_NAME(signal,"signal");
	 ::snow::App_obj::__Visit(HX_VISIT_ARG);
}

hx::Val Application_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"tick") ) { return hx::Val( tick_dyn() ); }
		if (HX_FIELD_EQ(inName,"draw") ) { return hx::Val( draw_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"ready") ) { return hx::Val( ready_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"signal") ) { return hx::Val( signal ); }
		if (HX_FIELD_EQ(inName,"config") ) { return hx::Val( config_dyn() ); }
		if (HX_FIELD_EQ(inName,"update") ) { return hx::Val( update_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"onevent") ) { return hx::Val( onevent_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"pixelRatio") ) { return hx::Val( pixelRatio ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"window_width") ) { return hx::Val( window_width ); }
		if (HX_FIELD_EQ(inName,"render_width") ) { return hx::Val( render_width ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"window_height") ) { return hx::Val( window_height ); }
		if (HX_FIELD_EQ(inName,"render_height") ) { return hx::Val( render_height ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"applicationView") ) { return hx::Val( applicationView ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"applicationContext") ) { return hx::Val( applicationContext ); }
	}
	return super::__Field(inName,inCallProp);
}

bool Application_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"instance") ) { outValue = ( instance ); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"getInstance") ) { outValue = getInstance_dyn(); return true; }
	}
	return false;
}

hx::Val Application_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"signal") ) { signal=inValue.Cast<  ::msignal::Signal1 >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"pixelRatio") ) { pixelRatio=inValue.Cast< Float >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"window_width") ) { window_width=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"render_width") ) { render_width=inValue.Cast< int >(); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"window_height") ) { window_height=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"render_height") ) { render_height=inValue.Cast< int >(); return inValue; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"applicationView") ) { applicationView=inValue.Cast<  ::frejo::app::View >(); return inValue; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"applicationContext") ) { applicationContext=inValue.Cast<  ::frejo::app::Context >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool Application_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"instance") ) { instance=ioValue.Cast<  ::frejo::app::Application >(); return true; }
	}
	return false;
}

void Application_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("window_width",37,25,26,59));
	outFields->push(HX_("window_height",96,e3,89,5e));
	outFields->push(HX_("applicationContext",7f,1c,49,32));
	outFields->push(HX_("applicationView",d5,f1,a6,ef));
	outFields->push(HX_("pixelRatio",a5,78,12,83));
	outFields->push(HX_("render_width",1d,8d,0b,01));
	outFields->push(HX_("render_height",f0,64,5f,9f));
	outFields->push(HX_("signal",68,2e,86,b4));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo Application_obj_sMemberStorageInfo[] = {
	{hx::fsInt,(int)offsetof(Application_obj,window_width),HX_("window_width",37,25,26,59)},
	{hx::fsInt,(int)offsetof(Application_obj,window_height),HX_("window_height",96,e3,89,5e)},
	{hx::fsObject /*::frejo::app::Context*/ ,(int)offsetof(Application_obj,applicationContext),HX_("applicationContext",7f,1c,49,32)},
	{hx::fsObject /*::frejo::app::View*/ ,(int)offsetof(Application_obj,applicationView),HX_("applicationView",d5,f1,a6,ef)},
	{hx::fsFloat,(int)offsetof(Application_obj,pixelRatio),HX_("pixelRatio",a5,78,12,83)},
	{hx::fsInt,(int)offsetof(Application_obj,render_width),HX_("render_width",1d,8d,0b,01)},
	{hx::fsInt,(int)offsetof(Application_obj,render_height),HX_("render_height",f0,64,5f,9f)},
	{hx::fsObject /*::msignal::Signal1*/ ,(int)offsetof(Application_obj,signal),HX_("signal",68,2e,86,b4)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo Application_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*::frejo::app::Application*/ ,(void *) &Application_obj::instance,HX_("instance",95,1f,e1,59)},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String Application_obj_sMemberFields[] = {
	HX_("window_width",37,25,26,59),
	HX_("window_height",96,e3,89,5e),
	HX_("applicationContext",7f,1c,49,32),
	HX_("applicationView",d5,f1,a6,ef),
	HX_("pixelRatio",a5,78,12,83),
	HX_("render_width",1d,8d,0b,01),
	HX_("render_height",f0,64,5f,9f),
	HX_("signal",68,2e,86,b4),
	HX_("ready",63,a0,ba,e6),
	HX_("config",c2,56,d2,c7),
	HX_("update",09,86,05,87),
	HX_("tick",5d,c3,fc,4c),
	HX_("draw",04,2c,70,42),
	HX_("onevent",9b,f6,d4,78),
	::String(null()) };

static void Application_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Application_obj::instance,"instance");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Application_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Application_obj::instance,"instance");
};

#endif

hx::Class Application_obj::__mClass;

static ::String Application_obj_sStaticFields[] = {
	HX_("instance",95,1f,e1,59),
	HX_("getInstance",4b,e2,d4,7f),
	::String(null())
};

void Application_obj::__register()
{
	Application_obj _hx_dummy;
	Application_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("frejo.app.Application",13,5e,3f,93);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Application_obj::__GetStatic;
	__mClass->mSetStaticField = &Application_obj::__SetStatic;
	__mClass->mMarkFunc = Application_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Application_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Application_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Application_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Application_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Application_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Application_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace frejo
} // end namespace app
