// Generated by Haxe 4.0.0-preview.4+1e3e5e0
#include <hxcpp.h>

#ifndef INCLUDED_minject_Injector
#include <minject/Injector.h>
#endif
#ifndef INCLUDED_minject_point_InjectionPoint
#include <minject/point/InjectionPoint.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_300a1a1fcee1855d_27_boot,"minject.point.InjectionPoint","boot",0xb4b78ed9,"minject.point.InjectionPoint.boot","minject/point/InjectionPoint.hx",27,0x99796cf5)
namespace minject{
namespace point{


static ::String InjectionPoint_obj_sMemberFields[] = {
	HX_("applyInjection",89,30,c6,ee),
	::String(null()) };

hx::Class InjectionPoint_obj::__mClass;

void InjectionPoint_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("minject.point.InjectionPoint",27,57,e2,99);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mMembers = hx::Class_obj::dupFunctions(InjectionPoint_obj_sMemberFields);
	__mClass->mCanCast = hx::TIsInterface< (int)0x7a83626b >;
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void InjectionPoint_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_300a1a1fcee1855d_27_boot)
HXDLIN(  27)		__mClass->__meta__ =  ::Dynamic(hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("obj",f7,8f,54,00), ::Dynamic(hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("interface",b9,31,da,39),null()))));
            	}
}

} // end namespace minject
} // end namespace point
