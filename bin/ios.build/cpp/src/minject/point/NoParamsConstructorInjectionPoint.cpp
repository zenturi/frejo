// Generated by Haxe 4.0.0-preview.4+1e3e5e0
#include <hxcpp.h>

#ifndef INCLUDED_Type
#include <Type.h>
#endif
#ifndef INCLUDED_minject_Injector
#include <minject/Injector.h>
#endif
#ifndef INCLUDED_minject_point_InjectionPoint
#include <minject/point/InjectionPoint.h>
#endif
#ifndef INCLUDED_minject_point_NoParamsConstructorInjectionPoint
#include <minject/point/NoParamsConstructorInjectionPoint.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_e1af6422c5e890f8_29_new,"minject.point.NoParamsConstructorInjectionPoint","new",0x34efc8b0,"minject.point.NoParamsConstructorInjectionPoint.new","minject/point/NoParamsConstructorInjectionPoint.hx",29,0x33e92482)
HX_LOCAL_STACK_FRAME(_hx_pos_e1af6422c5e890f8_33_applyInjection,"minject.point.NoParamsConstructorInjectionPoint","applyInjection",0x980f7a39,"minject.point.NoParamsConstructorInjectionPoint.applyInjection","minject/point/NoParamsConstructorInjectionPoint.hx",33,0x33e92482)
namespace minject{
namespace point{

void NoParamsConstructorInjectionPoint_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_e1af6422c5e890f8_29_new)
            	}

Dynamic NoParamsConstructorInjectionPoint_obj::__CreateEmpty() { return new NoParamsConstructorInjectionPoint_obj; }

void *NoParamsConstructorInjectionPoint_obj::_hx_vtable = 0;

Dynamic NoParamsConstructorInjectionPoint_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< NoParamsConstructorInjectionPoint_obj > _hx_result = new NoParamsConstructorInjectionPoint_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool NoParamsConstructorInjectionPoint_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x12277ffa;
}

static ::minject::point::InjectionPoint_obj _hx_minject_point_NoParamsConstructorInjectionPoint__hx_minject_point_InjectionPoint= {
	(  ::Dynamic (hx::Object::*)( ::Dynamic, ::minject::Injector))&::minject::point::NoParamsConstructorInjectionPoint_obj::applyInjection,
};

void *NoParamsConstructorInjectionPoint_obj::_hx_getInterface(int inHash) {
	switch(inHash) {
		case (int)0x7a83626b: return &_hx_minject_point_NoParamsConstructorInjectionPoint__hx_minject_point_InjectionPoint;
	}
	#ifdef HXCPP_SCRIPTABLE
	return super::_hx_getInterface(inHash);
	#else
	return 0;
	#endif
}

 ::Dynamic NoParamsConstructorInjectionPoint_obj::applyInjection( ::Dynamic target, ::minject::Injector injector){
            	HX_STACKFRAME(&_hx_pos_e1af6422c5e890f8_33_applyInjection)
HXDLIN(  33)		return ::Type_obj::createInstance(target,::cpp::VirtualArray_obj::__new(0));
            	}


HX_DEFINE_DYNAMIC_FUNC2(NoParamsConstructorInjectionPoint_obj,applyInjection,return )


hx::ObjectPtr< NoParamsConstructorInjectionPoint_obj > NoParamsConstructorInjectionPoint_obj::__new() {
	hx::ObjectPtr< NoParamsConstructorInjectionPoint_obj > __this = new NoParamsConstructorInjectionPoint_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< NoParamsConstructorInjectionPoint_obj > NoParamsConstructorInjectionPoint_obj::__alloc(hx::Ctx *_hx_ctx) {
	NoParamsConstructorInjectionPoint_obj *__this = (NoParamsConstructorInjectionPoint_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(NoParamsConstructorInjectionPoint_obj), false, "minject.point.NoParamsConstructorInjectionPoint"));
	*(void **)__this = NoParamsConstructorInjectionPoint_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

NoParamsConstructorInjectionPoint_obj::NoParamsConstructorInjectionPoint_obj()
{
}

hx::Val NoParamsConstructorInjectionPoint_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 14:
		if (HX_FIELD_EQ(inName,"applyInjection") ) { return hx::Val( applyInjection_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo *NoParamsConstructorInjectionPoint_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *NoParamsConstructorInjectionPoint_obj_sStaticStorageInfo = 0;
#endif

static ::String NoParamsConstructorInjectionPoint_obj_sMemberFields[] = {
	HX_("applyInjection",89,30,c6,ee),
	::String(null()) };

hx::Class NoParamsConstructorInjectionPoint_obj::__mClass;

void NoParamsConstructorInjectionPoint_obj::__register()
{
	NoParamsConstructorInjectionPoint_obj _hx_dummy;
	NoParamsConstructorInjectionPoint_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("minject.point.NoParamsConstructorInjectionPoint",be,f0,59,e4);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(NoParamsConstructorInjectionPoint_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< NoParamsConstructorInjectionPoint_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = NoParamsConstructorInjectionPoint_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = NoParamsConstructorInjectionPoint_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace minject
} // end namespace point
