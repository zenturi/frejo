// Generated by Haxe 4.0.0-preview.4+1e3e5e0
#include <hxcpp.h>

#ifndef INCLUDED_snow_types__Types_OpenGLProfile_Impl_
#include <snow/types/_Types/OpenGLProfile_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_4a29971c2a745404_453_toString,"snow.types._Types.OpenGLProfile_Impl_","toString",0xfae03454,"snow.types._Types.OpenGLProfile_Impl_.toString","snow/types/Types.hx",453,0x72b41ce7)
HX_LOCAL_STACK_FRAME(_hx_pos_4a29971c2a745404_446_boot,"snow.types._Types.OpenGLProfile_Impl_","boot",0xbfd7f3da,"snow.types._Types.OpenGLProfile_Impl_.boot","snow/types/Types.hx",446,0x72b41ce7)
HX_LOCAL_STACK_FRAME(_hx_pos_4a29971c2a745404_448_boot,"snow.types._Types.OpenGLProfile_Impl_","boot",0xbfd7f3da,"snow.types._Types.OpenGLProfile_Impl_.boot","snow/types/Types.hx",448,0x72b41ce7)
HX_LOCAL_STACK_FRAME(_hx_pos_4a29971c2a745404_450_boot,"snow.types._Types.OpenGLProfile_Impl_","boot",0xbfd7f3da,"snow.types._Types.OpenGLProfile_Impl_.boot","snow/types/Types.hx",450,0x72b41ce7)
namespace snow{
namespace types{
namespace _Types{

void OpenGLProfile_Impl__obj::__construct() { }

Dynamic OpenGLProfile_Impl__obj::__CreateEmpty() { return new OpenGLProfile_Impl__obj; }

void *OpenGLProfile_Impl__obj::_hx_vtable = 0;

Dynamic OpenGLProfile_Impl__obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< OpenGLProfile_Impl__obj > _hx_result = new OpenGLProfile_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool OpenGLProfile_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x2967aa2e;
}

int OpenGLProfile_Impl__obj::compatibility;

int OpenGLProfile_Impl__obj::core;

int OpenGLProfile_Impl__obj::gles;

::String OpenGLProfile_Impl__obj::toString(int this1){
            	HX_STACKFRAME(&_hx_pos_4a29971c2a745404_453_toString)
HXDLIN( 453)		switch((int)(this1)){
            			case (int)0: {
HXLINE( 454)				return HX_("compatibility",30,c4,1a,4d);
            			}
            			break;
            			case (int)1: {
HXLINE( 455)				return HX_("core",5f,bd,c4,41);
            			}
            			break;
            			case (int)2: {
HXLINE( 456)				return HX_("gles",d3,45,67,44);
            			}
            			break;
            			default:{
HXLINE( 457)				return (HX_("",00,00,00,00) + this1);
            			}
            		}
HXLINE( 453)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(OpenGLProfile_Impl__obj,toString,return )


OpenGLProfile_Impl__obj::OpenGLProfile_Impl__obj()
{
}

bool OpenGLProfile_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"toString") ) { outValue = toString_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo *OpenGLProfile_Impl__obj_sMemberStorageInfo = 0;
static hx::StaticInfo OpenGLProfile_Impl__obj_sStaticStorageInfo[] = {
	{hx::fsInt,(void *) &OpenGLProfile_Impl__obj::compatibility,HX_("compatibility",30,c4,1a,4d)},
	{hx::fsInt,(void *) &OpenGLProfile_Impl__obj::core,HX_("core",5f,bd,c4,41)},
	{hx::fsInt,(void *) &OpenGLProfile_Impl__obj::gles,HX_("gles",d3,45,67,44)},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void OpenGLProfile_Impl__obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(OpenGLProfile_Impl__obj::compatibility,"compatibility");
	HX_MARK_MEMBER_NAME(OpenGLProfile_Impl__obj::core,"core");
	HX_MARK_MEMBER_NAME(OpenGLProfile_Impl__obj::gles,"gles");
};

#ifdef HXCPP_VISIT_ALLOCS
static void OpenGLProfile_Impl__obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(OpenGLProfile_Impl__obj::compatibility,"compatibility");
	HX_VISIT_MEMBER_NAME(OpenGLProfile_Impl__obj::core,"core");
	HX_VISIT_MEMBER_NAME(OpenGLProfile_Impl__obj::gles,"gles");
};

#endif

hx::Class OpenGLProfile_Impl__obj::__mClass;

static ::String OpenGLProfile_Impl__obj_sStaticFields[] = {
	HX_("compatibility",30,c4,1a,4d),
	HX_("core",5f,bd,c4,41),
	HX_("gles",d3,45,67,44),
	HX_("toString",ac,d0,6e,38),
	::String(null())
};

void OpenGLProfile_Impl__obj::__register()
{
	OpenGLProfile_Impl__obj _hx_dummy;
	OpenGLProfile_Impl__obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("snow.types._Types.OpenGLProfile_Impl_",c6,11,be,c8);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &OpenGLProfile_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = OpenGLProfile_Impl__obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(OpenGLProfile_Impl__obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< OpenGLProfile_Impl__obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = OpenGLProfile_Impl__obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = OpenGLProfile_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = OpenGLProfile_Impl__obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void OpenGLProfile_Impl__obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_4a29971c2a745404_446_boot)
HXDLIN( 446)		compatibility = 0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_4a29971c2a745404_448_boot)
HXDLIN( 448)		core = 1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_4a29971c2a745404_450_boot)
HXDLIN( 450)		gles = 2;
            	}
}

} // end namespace snow
} // end namespace types
} // end namespace _Types
