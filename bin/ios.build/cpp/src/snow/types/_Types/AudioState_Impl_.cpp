// Generated by Haxe 4.0.0-preview.4+1e3e5e0
#include <hxcpp.h>

#ifndef INCLUDED_snow_types__Types_AudioState_Impl_
#include <snow/types/_Types/AudioState_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_60739fe59089243f_284_toString,"snow.types._Types.AudioState_Impl_","toString",0x5c17396b,"snow.types._Types.AudioState_Impl_.toString","snow/types/Types.hx",284,0x72b41ce7)
HX_LOCAL_STACK_FRAME(_hx_pos_60739fe59089243f_275_boot,"snow.types._Types.AudioState_Impl_","boot",0x1312e171,"snow.types._Types.AudioState_Impl_.boot","snow/types/Types.hx",275,0x72b41ce7)
HX_LOCAL_STACK_FRAME(_hx_pos_60739fe59089243f_277_boot,"snow.types._Types.AudioState_Impl_","boot",0x1312e171,"snow.types._Types.AudioState_Impl_.boot","snow/types/Types.hx",277,0x72b41ce7)
HX_LOCAL_STACK_FRAME(_hx_pos_60739fe59089243f_279_boot,"snow.types._Types.AudioState_Impl_","boot",0x1312e171,"snow.types._Types.AudioState_Impl_.boot","snow/types/Types.hx",279,0x72b41ce7)
HX_LOCAL_STACK_FRAME(_hx_pos_60739fe59089243f_281_boot,"snow.types._Types.AudioState_Impl_","boot",0x1312e171,"snow.types._Types.AudioState_Impl_.boot","snow/types/Types.hx",281,0x72b41ce7)
namespace snow{
namespace types{
namespace _Types{

void AudioState_Impl__obj::__construct() { }

Dynamic AudioState_Impl__obj::__CreateEmpty() { return new AudioState_Impl__obj; }

void *AudioState_Impl__obj::_hx_vtable = 0;

Dynamic AudioState_Impl__obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< AudioState_Impl__obj > _hx_result = new AudioState_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool AudioState_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x405e9d0b;
}

int AudioState_Impl__obj::as_invalid;

int AudioState_Impl__obj::as_paused;

int AudioState_Impl__obj::as_playing;

int AudioState_Impl__obj::as_stopped;

::String AudioState_Impl__obj::toString(int this1){
            	HX_STACKFRAME(&_hx_pos_60739fe59089243f_284_toString)
HXDLIN( 284)		switch((int)(this1)){
            			case (int)-1: {
HXLINE( 285)				return HX_("as_invalid",6a,cb,a9,13);
            			}
            			break;
            			case (int)0: {
HXLINE( 286)				return HX_("as_paused",9b,5f,1d,fd);
            			}
            			break;
            			case (int)1: {
HXLINE( 287)				return HX_("as_playing",e1,ff,79,62);
            			}
            			break;
            			case (int)2: {
HXLINE( 288)				return HX_("as_stopped",80,c2,c3,1b);
            			}
            			break;
            			default:{
HXLINE( 289)				return (HX_("",00,00,00,00) + this1);
            			}
            		}
HXLINE( 284)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AudioState_Impl__obj,toString,return )


AudioState_Impl__obj::AudioState_Impl__obj()
{
}

bool AudioState_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"toString") ) { outValue = toString_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo *AudioState_Impl__obj_sMemberStorageInfo = 0;
static hx::StaticInfo AudioState_Impl__obj_sStaticStorageInfo[] = {
	{hx::fsInt,(void *) &AudioState_Impl__obj::as_invalid,HX_("as_invalid",6a,cb,a9,13)},
	{hx::fsInt,(void *) &AudioState_Impl__obj::as_paused,HX_("as_paused",9b,5f,1d,fd)},
	{hx::fsInt,(void *) &AudioState_Impl__obj::as_playing,HX_("as_playing",e1,ff,79,62)},
	{hx::fsInt,(void *) &AudioState_Impl__obj::as_stopped,HX_("as_stopped",80,c2,c3,1b)},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void AudioState_Impl__obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(AudioState_Impl__obj::as_invalid,"as_invalid");
	HX_MARK_MEMBER_NAME(AudioState_Impl__obj::as_paused,"as_paused");
	HX_MARK_MEMBER_NAME(AudioState_Impl__obj::as_playing,"as_playing");
	HX_MARK_MEMBER_NAME(AudioState_Impl__obj::as_stopped,"as_stopped");
};

#ifdef HXCPP_VISIT_ALLOCS
static void AudioState_Impl__obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(AudioState_Impl__obj::as_invalid,"as_invalid");
	HX_VISIT_MEMBER_NAME(AudioState_Impl__obj::as_paused,"as_paused");
	HX_VISIT_MEMBER_NAME(AudioState_Impl__obj::as_playing,"as_playing");
	HX_VISIT_MEMBER_NAME(AudioState_Impl__obj::as_stopped,"as_stopped");
};

#endif

hx::Class AudioState_Impl__obj::__mClass;

static ::String AudioState_Impl__obj_sStaticFields[] = {
	HX_("as_invalid",6a,cb,a9,13),
	HX_("as_paused",9b,5f,1d,fd),
	HX_("as_playing",e1,ff,79,62),
	HX_("as_stopped",80,c2,c3,1b),
	HX_("toString",ac,d0,6e,38),
	::String(null())
};

void AudioState_Impl__obj::__register()
{
	AudioState_Impl__obj _hx_dummy;
	AudioState_Impl__obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("snow.types._Types.AudioState_Impl_",8f,0b,78,71);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &AudioState_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = AudioState_Impl__obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(AudioState_Impl__obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< AudioState_Impl__obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = AudioState_Impl__obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = AudioState_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = AudioState_Impl__obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void AudioState_Impl__obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_60739fe59089243f_275_boot)
HXDLIN( 275)		as_invalid = -1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_60739fe59089243f_277_boot)
HXDLIN( 277)		as_paused = 0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_60739fe59089243f_279_boot)
HXDLIN( 279)		as_playing = 1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_60739fe59089243f_281_boot)
HXDLIN( 281)		as_stopped = 2;
            	}
}

} // end namespace snow
} // end namespace types
} // end namespace _Types
