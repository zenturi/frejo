// Generated by Haxe 4.0.0-preview.4+1e3e5e0
#include <hxcpp.h>

#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_haxe_io_Path
#include <haxe/io/Path.h>
#endif
#ifndef INCLUDED_snow_Snow
#include <snow/Snow.h>
#endif
#ifndef INCLUDED_snow_api_Promise
#include <snow/api/Promise.h>
#endif
#ifndef INCLUDED_snow_api_buffers_ArrayBufferView
#include <snow/api/buffers/ArrayBufferView.h>
#endif
#ifndef INCLUDED_snow_systems_assets_Asset
#include <snow/systems/assets/Asset.h>
#endif
#ifndef INCLUDED_snow_systems_assets_AssetText
#include <snow/systems/assets/AssetText.h>
#endif
#ifndef INCLUDED_snow_systems_assets_Assets
#include <snow/systems/assets/Assets.h>
#endif
#ifndef INCLUDED_snow_systems_io_IO
#include <snow/systems/io/IO.h>
#endif
#ifndef INCLUDED_snow_types_Error
#include <snow/types/Error.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_e93956f93c975dfe_343_new,"snow.systems.assets.AssetText","new",0x44d521b9,"snow.systems.assets.AssetText.new","snow/systems/assets/Asset.hx",343,0x7a5509c3)
HX_LOCAL_STACK_FRAME(_hx_pos_e93956f93c975dfe_357_reload,"snow.systems.assets.AssetText","reload",0x8b1a9fa0,"snow.systems.assets.AssetText.reload","snow/systems/assets/Asset.hx",357,0x7a5509c3)
HX_LOCAL_STACK_FRAME(_hx_pos_e93956f93c975dfe_353_reload,"snow.systems.assets.AssetText","reload",0x8b1a9fa0,"snow.systems.assets.AssetText.reload","snow/systems/assets/Asset.hx",353,0x7a5509c3)
HX_LOCAL_STACK_FRAME(_hx_pos_e93956f93c975dfe_369_destroy,"snow.systems.assets.AssetText","destroy",0xf12d9ed3,"snow.systems.assets.AssetText.destroy","snow/systems/assets/Asset.hx",369,0x7a5509c3)
HX_LOCAL_STACK_FRAME(_hx_pos_e93956f93c975dfe_398_set_text,"snow.systems.assets.AssetText","set_text",0xc0ee0db1,"snow.systems.assets.AssetText.set_text","snow/systems/assets/Asset.hx",398,0x7a5509c3)
HX_LOCAL_STACK_FRAME(_hx_pos_e93956f93c975dfe_377_load,"snow.systems.assets.AssetText","load",0xf45d76ad,"snow.systems.assets.AssetText.load","snow/systems/assets/Asset.hx",377,0x7a5509c3)
HX_LOCAL_STACK_FRAME(_hx_pos_e93956f93c975dfe_382_processor,"snow.systems.assets.AssetText","processor",0xadd6176b,"snow.systems.assets.AssetText.processor","snow/systems/assets/Asset.hx",382,0x7a5509c3)
namespace snow{
namespace systems{
namespace assets{

void AssetText_obj::__construct( ::snow::systems::assets::Assets _system,::String _id,::String _text){
            	HX_STACKFRAME(&_hx_pos_e93956f93c975dfe_343_new)
HXLINE( 345)		super::__construct(_system,_id,2);
HXLINE( 346)		this->set_text(_text);
            	}

Dynamic AssetText_obj::__CreateEmpty() { return new AssetText_obj; }

void *AssetText_obj::_hx_vtable = 0;

Dynamic AssetText_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< AssetText_obj > _hx_result = new AssetText_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2]);
	return _hx_result;
}

bool AssetText_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x230ce519) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x230ce519;
	} else {
		return inClassId==(int)0x3efde4b0;
	}
}

 ::snow::api::Promise AssetText_obj::reload(){
            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_1, ::snow::systems::assets::AssetText,_gthis) HXARGC(2)
            		void _hx_run( ::Dynamic resolve, ::Dynamic reject){
            			HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_0, ::snow::systems::assets::AssetText,_gthis, ::Dynamic,resolve) HXARGC(1)
            			void _hx_run(::String _text){
            				HX_STACKFRAME(&_hx_pos_e93956f93c975dfe_357_reload)
HXLINE( 359)				_gthis->set_text(_text);
HXLINE( 360)				resolve(_gthis);
            			}
            			HX_END_LOCAL_FUNC1((void))

            			HX_STACKFRAME(&_hx_pos_e93956f93c975dfe_357_reload)
HXLINE( 357)			 ::snow::systems::io::IO _gthis1 = _gthis->_hx_system->app->io;
HXDLIN( 357)			_gthis1->data_flow(::haxe::io::Path_obj::join(::Array_obj< ::String >::__new(2)->init(0,_gthis->_hx_system->root)->init(1,_gthis->id)),::snow::systems::assets::AssetText_obj::processor_dyn(),null())->then( ::Dynamic(new _hx_Closure_0(_gthis,resolve)),null())->error(reject);
            		}
            		HX_END_LOCAL_FUNC2((void))

            	HX_GC_STACKFRAME(&_hx_pos_e93956f93c975dfe_353_reload)
HXDLIN( 353)		 ::snow::systems::assets::AssetText _gthis = hx::ObjectPtr<OBJ_>(this);
HXLINE( 355)		return  ::snow::api::Promise_obj::__alloc( HX_CTX , ::Dynamic(new _hx_Closure_1(_gthis)));
            	}


HX_DEFINE_DYNAMIC_FUNC0(AssetText_obj,reload,return )

void AssetText_obj::destroy(){
            	HX_STACKFRAME(&_hx_pos_e93956f93c975dfe_369_destroy)
HXDLIN( 369)		this->set_text(null());
            	}


::String AssetText_obj::set_text(::String _text){
            	HX_STACKFRAME(&_hx_pos_e93956f93c975dfe_398_set_text)
HXLINE( 400)		this->loaded = hx::IsNotNull( _text );
HXLINE( 401)		return (this->text = _text);
            	}


HX_DEFINE_DYNAMIC_FUNC1(AssetText_obj,set_text,return )

 ::snow::api::Promise AssetText_obj::load( ::snow::systems::assets::Assets _system,::String _id){
            	HX_GC_STACKFRAME(&_hx_pos_e93956f93c975dfe_377_load)
HXDLIN( 377)		return  ::snow::systems::assets::AssetText_obj::__alloc( HX_CTX ,_system,_id,null())->reload();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AssetText_obj,load,return )

 ::snow::api::Promise AssetText_obj::processor( ::snow::Snow _app,::String _id, ::snow::api::buffers::ArrayBufferView _data){
            	HX_STACKFRAME(&_hx_pos_e93956f93c975dfe_382_processor)
HXLINE( 384)		if (hx::IsNull( _data )) {
HXLINE( 384)			return ::snow::api::Promise_obj::reject(::snow::types::Error_obj::error(HX_("AssetText processor: data was null",ff,b9,3d,b3)));
            		}
HXLINE( 386)		::String _string = ::haxe::io::Bytes_obj::ofData(_data->buffer)->toString();
HXLINE( 388)		_data->buffer = null();
HXLINE( 389)		_data = null();
HXLINE( 391)		return ::snow::api::Promise_obj::resolve(_string);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(AssetText_obj,processor,return )


hx::ObjectPtr< AssetText_obj > AssetText_obj::__new( ::snow::systems::assets::Assets _system,::String _id,::String _text) {
	hx::ObjectPtr< AssetText_obj > __this = new AssetText_obj();
	__this->__construct(_system,_id,_text);
	return __this;
}

hx::ObjectPtr< AssetText_obj > AssetText_obj::__alloc(hx::Ctx *_hx_ctx, ::snow::systems::assets::Assets _system,::String _id,::String _text) {
	AssetText_obj *__this = (AssetText_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(AssetText_obj), true, "snow.systems.assets.AssetText"));
	*(void **)__this = AssetText_obj::_hx_vtable;
	__this->__construct(_system,_id,_text);
	return __this;
}

AssetText_obj::AssetText_obj()
{
}

void AssetText_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(AssetText);
	HX_MARK_MEMBER_NAME(text,"text");
	 ::snow::systems::assets::Asset_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void AssetText_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(text,"text");
	 ::snow::systems::assets::Asset_obj::__Visit(HX_VISIT_ARG);
}

hx::Val AssetText_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"text") ) { return hx::Val( text ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"reload") ) { return hx::Val( reload_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"destroy") ) { return hx::Val( destroy_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"set_text") ) { return hx::Val( set_text_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool AssetText_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"load") ) { outValue = load_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"processor") ) { outValue = processor_dyn(); return true; }
	}
	return false;
}

hx::Val AssetText_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"text") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_text(inValue.Cast< ::String >()) );text=inValue.Cast< ::String >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void AssetText_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("text",ad,cc,f9,4c));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo AssetText_obj_sMemberStorageInfo[] = {
	{hx::fsString,(int)offsetof(AssetText_obj,text),HX_("text",ad,cc,f9,4c)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *AssetText_obj_sStaticStorageInfo = 0;
#endif

static ::String AssetText_obj_sMemberFields[] = {
	HX_("text",ad,cc,f9,4c),
	HX_("reload",59,53,df,03),
	HX_("destroy",fa,2c,86,24),
	HX_("set_text",aa,e1,11,7b),
	::String(null()) };

hx::Class AssetText_obj::__mClass;

static ::String AssetText_obj_sStaticFields[] = {
	HX_("load",26,9a,b7,47),
	HX_("processor",52,bd,0b,d3),
	::String(null())
};

void AssetText_obj::__register()
{
	AssetText_obj _hx_dummy;
	AssetText_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("snow.systems.assets.AssetText",47,d1,e9,5c);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &AssetText_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(AssetText_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(AssetText_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< AssetText_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = AssetText_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = AssetText_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace snow
} // end namespace systems
} // end namespace assets
