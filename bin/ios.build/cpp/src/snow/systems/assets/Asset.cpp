// Generated by Haxe 4.0.0-preview.4+1e3e5e0
#include <hxcpp.h>

#ifndef INCLUDED_snow_systems_assets_Asset
#include <snow/systems/assets/Asset.h>
#endif

namespace snow{
namespace systems{
namespace assets{

void Asset_obj::__construct() { }

Dynamic Asset_obj::__CreateEmpty() { return new Asset_obj; }

void *Asset_obj::_hx_vtable = 0;

Dynamic Asset_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Asset_obj > _hx_result = new Asset_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Asset_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x3efde4b0;
}


Asset_obj::Asset_obj()
{
}

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo *Asset_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *Asset_obj_sStaticStorageInfo = 0;
#endif

hx::Class Asset_obj::__mClass;

void Asset_obj::__register()
{
	Asset_obj _hx_dummy;
	Asset_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("snow.systems.assets.Asset",7a,93,ee,6f);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Asset_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Asset_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Asset_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace snow
} // end namespace systems
} // end namespace assets
