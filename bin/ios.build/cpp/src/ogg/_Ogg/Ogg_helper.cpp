// Generated by Haxe 4.0.0-preview.4+1e3e5e0
#include <hxcpp.h>

#ifndef INCLUDED_886b57b7a9067d4f
#define INCLUDED_886b57b7a9067d4f
#include "linc_ogg.h"
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_IntMap
#include <haxe/ds/IntMap.h>
#endif
#ifndef INCLUDED_ogg__Ogg_Ogg_helper
#include <ogg/_Ogg/Ogg_helper.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_7af8f7cc7903114e_139_ov_open_callbacks,"ogg._Ogg.Ogg_helper","ov_open_callbacks",0x85f374e0,"ogg._Ogg.Ogg_helper.ov_open_callbacks","ogg/Ogg.hx",139,0x0dd76eef)
HX_LOCAL_STACK_FRAME(_hx_pos_7af8f7cc7903114e_160_read_callback,"ogg._Ogg.Ogg_helper","read_callback",0xd481ddfd,"ogg._Ogg.Ogg_helper.read_callback","ogg/Ogg.hx",160,0x0dd76eef)
HX_LOCAL_STACK_FRAME(_hx_pos_7af8f7cc7903114e_173_seek_callback,"ogg._Ogg.Ogg_helper","seek_callback",0x5fc54f9b,"ogg._Ogg.Ogg_helper.seek_callback","ogg/Ogg.hx",173,0x0dd76eef)
HX_LOCAL_STACK_FRAME(_hx_pos_7af8f7cc7903114e_187_close_callback,"ogg._Ogg.Ogg_helper","close_callback",0x6457a09d,"ogg._Ogg.Ogg_helper.close_callback","ogg/Ogg.hx",187,0x0dd76eef)
HX_LOCAL_STACK_FRAME(_hx_pos_7af8f7cc7903114e_200_tell_callback,"ogg._Ogg.Ogg_helper","tell_callback",0xebe533c2,"ogg._Ogg.Ogg_helper.tell_callback","ogg/Ogg.hx",200,0x0dd76eef)
HX_LOCAL_STACK_FRAME(_hx_pos_7af8f7cc7903114e_135_boot,"ogg._Ogg.Ogg_helper","boot",0xd42feb23,"ogg._Ogg.Ogg_helper.boot","ogg/Ogg.hx",135,0x0dd76eef)
HX_LOCAL_STACK_FRAME(_hx_pos_7af8f7cc7903114e_136_boot,"ogg._Ogg.Ogg_helper","boot",0xd42feb23,"ogg._Ogg.Ogg_helper.boot","ogg/Ogg.hx",136,0x0dd76eef)
HX_LOCAL_STACK_FRAME(_hx_pos_7af8f7cc7903114e_137_boot,"ogg._Ogg.Ogg_helper","boot",0xd42feb23,"ogg._Ogg.Ogg_helper.boot","ogg/Ogg.hx",137,0x0dd76eef)
namespace ogg{
namespace _Ogg{

void Ogg_helper_obj::__construct() { }

Dynamic Ogg_helper_obj::__CreateEmpty() { return new Ogg_helper_obj; }

void *Ogg_helper_obj::_hx_vtable = 0;

Dynamic Ogg_helper_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Ogg_helper_obj > _hx_result = new Ogg_helper_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Ogg_helper_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x552f0699;
}

bool Ogg_helper_obj::callbacks_set;

 ::haxe::ds::IntMap Ogg_helper_obj::callbacks;

int Ogg_helper_obj::cb_seq;

int Ogg_helper_obj::ov_open_callbacks( ::Dynamic userdata,::cpp::Pointer<  OggVorbis_File > file,::Array< unsigned char > initial,int ibytes, ::Dynamic _callbacks){
            	HX_STACKFRAME(&_hx_pos_7af8f7cc7903114e_139_ov_open_callbacks)
HXLINE( 141)		if (!(::ogg::_Ogg::Ogg_helper_obj::callbacks_set)) {
HXLINE( 143)			::cpp::Function< int  (int,int,int,::Array< unsigned char >) > _hx_tmp = ::cpp::Function< int (int,int,int,::Array< unsigned char >)>(hx::AnyCast(&::ogg::_Ogg::Ogg_helper_obj::read_callback ));
HXLINE( 144)			::cpp::Function< int  (int,int,int) > _hx_tmp1 = ::cpp::Function< int (int,int,int)>(hx::AnyCast(&::ogg::_Ogg::Ogg_helper_obj::seek_callback ));
HXLINE( 145)			::cpp::Function< int  (int) > _hx_tmp2 = ::cpp::Function< int (int)>(hx::AnyCast(&::ogg::_Ogg::Ogg_helper_obj::close_callback ));
HXLINE( 142)			linc::ogg::init_callbacks(_hx_tmp,_hx_tmp1,_hx_tmp2,::cpp::Function< int (int)>(hx::AnyCast(&::ogg::_Ogg::Ogg_helper_obj::tell_callback )));
            		}
HXLINE( 150)		int current_seq = ::ogg::_Ogg::Ogg_helper_obj::cb_seq;
HXLINE( 152)		::ogg::_Ogg::Ogg_helper_obj::callbacks->set(current_seq, ::Dynamic(hx::Anon_obj::Create(4)
            			->setFixed(0,HX_("callbacks",0e,f3,bf,a6),_callbacks)
            			->setFixed(1,HX_("id",db,5b,00,00),current_seq)
            			->setFixed(2,HX_("userdata",f5,69,4f,1a),userdata)
            			->setFixed(3,HX_("file",7c,ce,bb,43),file)));
HXLINE( 154)		++::ogg::_Ogg::Ogg_helper_obj::cb_seq;
HXLINE( 156)		::cpp::Pointer<  OggVorbis_File > tmp = file;
HXDLIN( 156)		return linc::ogg::internal_open_callbacks(current_seq,tmp,initial,ibytes);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(Ogg_helper_obj,ov_open_callbacks,return )

int Ogg_helper_obj::read_callback(int cb_id,int size,int nmemb,::Array< unsigned char > data){
            	HX_STACKFRAME(&_hx_pos_7af8f7cc7903114e_160_read_callback)
HXLINE( 162)		 ::Dynamic info = ::ogg::_Ogg::Ogg_helper_obj::callbacks->get(cb_id);
HXLINE( 164)		if (hx::IsNotNull( info )) {
HXLINE( 165)			return ( (int)( ::Dynamic(info->__Field(HX_("callbacks",0e,f3,bf,a6),hx::paccDynamic))->__Field(HX_("read_fn",d1,5d,da,02),hx::paccDynamic)( ::Dynamic(info->__Field(HX_("userdata",f5,69,4f,1a),hx::paccDynamic)),size,nmemb,data)) );
            		}
HXLINE( 169)		return 0;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(Ogg_helper_obj,read_callback,return )

int Ogg_helper_obj::seek_callback(int cb_id,int offset,int whence){
            	HX_STACKFRAME(&_hx_pos_7af8f7cc7903114e_173_seek_callback)
HXLINE( 175)		 ::Dynamic info = ::ogg::_Ogg::Ogg_helper_obj::callbacks->get(cb_id);
HXLINE( 177)		bool _hx_tmp;
HXDLIN( 177)		if (hx::IsNotNull( info )) {
HXLINE( 177)			_hx_tmp = hx::IsNotNull(  ::Dynamic(info->__Field(HX_("callbacks",0e,f3,bf,a6),hx::paccDynamic))->__Field(HX_("seek_fn",ef,a4,aa,7e),hx::paccDynamic) );
            		}
            		else {
HXLINE( 177)			_hx_tmp = false;
            		}
HXDLIN( 177)		if (_hx_tmp) {
HXLINE( 178)			 ::Dynamic(info->__Field(HX_("callbacks",0e,f3,bf,a6),hx::paccDynamic))->__Field(HX_("seek_fn",ef,a4,aa,7e),hx::paccDynamic)( ::Dynamic(info->__Field(HX_("userdata",f5,69,4f,1a),hx::paccDynamic)),offset,whence);
HXLINE( 179)			return 0;
            		}
HXLINE( 183)		return -1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Ogg_helper_obj,seek_callback,return )

int Ogg_helper_obj::close_callback(int cb_id){
            	HX_STACKFRAME(&_hx_pos_7af8f7cc7903114e_187_close_callback)
HXLINE( 189)		 ::Dynamic info = ::ogg::_Ogg::Ogg_helper_obj::callbacks->get(cb_id);
HXLINE( 191)		bool _hx_tmp;
HXDLIN( 191)		if (hx::IsNotNull( info )) {
HXLINE( 191)			_hx_tmp = hx::IsNotNull(  ::Dynamic(info->__Field(HX_("callbacks",0e,f3,bf,a6),hx::paccDynamic))->__Field(HX_("close_fn",af,fa,4c,85),hx::paccDynamic) );
            		}
            		else {
HXLINE( 191)			_hx_tmp = false;
            		}
HXDLIN( 191)		if (_hx_tmp) {
HXLINE( 192)			 ::Dynamic(info->__Field(HX_("callbacks",0e,f3,bf,a6),hx::paccDynamic))->__Field(HX_("close_fn",af,fa,4c,85),hx::paccDynamic)( ::Dynamic(info->__Field(HX_("userdata",f5,69,4f,1a),hx::paccDynamic)));
            		}
HXLINE( 196)		return 0;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Ogg_helper_obj,close_callback,return )

int Ogg_helper_obj::tell_callback(int cb_id){
            	HX_STACKFRAME(&_hx_pos_7af8f7cc7903114e_200_tell_callback)
HXLINE( 202)		 ::Dynamic info = ::ogg::_Ogg::Ogg_helper_obj::callbacks->get(cb_id);
HXLINE( 204)		bool _hx_tmp;
HXDLIN( 204)		if (hx::IsNotNull( info )) {
HXLINE( 204)			_hx_tmp = hx::IsNotNull(  ::Dynamic(info->__Field(HX_("callbacks",0e,f3,bf,a6),hx::paccDynamic))->__Field(HX_("tell_fn",d6,61,b7,b0),hx::paccDynamic) );
            		}
            		else {
HXLINE( 204)			_hx_tmp = false;
            		}
HXDLIN( 204)		if (_hx_tmp) {
HXLINE( 205)			return ( (int)( ::Dynamic(info->__Field(HX_("callbacks",0e,f3,bf,a6),hx::paccDynamic))->__Field(HX_("tell_fn",d6,61,b7,b0),hx::paccDynamic)( ::Dynamic(info->__Field(HX_("userdata",f5,69,4f,1a),hx::paccDynamic)))) );
            		}
HXLINE( 210)		return -1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Ogg_helper_obj,tell_callback,return )


Ogg_helper_obj::Ogg_helper_obj()
{
}

bool Ogg_helper_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"cb_seq") ) { outValue = ( cb_seq ); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"callbacks") ) { outValue = ( callbacks ); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"callbacks_set") ) { outValue = ( callbacks_set ); return true; }
		if (HX_FIELD_EQ(inName,"read_callback") ) { outValue = read_callback_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"seek_callback") ) { outValue = seek_callback_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"tell_callback") ) { outValue = tell_callback_dyn(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"close_callback") ) { outValue = close_callback_dyn(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"ov_open_callbacks") ) { outValue = ov_open_callbacks_dyn(); return true; }
	}
	return false;
}

bool Ogg_helper_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"cb_seq") ) { cb_seq=ioValue.Cast< int >(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"callbacks") ) { callbacks=ioValue.Cast<  ::haxe::ds::IntMap >(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"callbacks_set") ) { callbacks_set=ioValue.Cast< bool >(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo *Ogg_helper_obj_sMemberStorageInfo = 0;
static hx::StaticInfo Ogg_helper_obj_sStaticStorageInfo[] = {
	{hx::fsBool,(void *) &Ogg_helper_obj::callbacks_set,HX_("callbacks_set",b1,72,f4,1f)},
	{hx::fsObject /*::haxe::ds::IntMap*/ ,(void *) &Ogg_helper_obj::callbacks,HX_("callbacks",0e,f3,bf,a6)},
	{hx::fsInt,(void *) &Ogg_helper_obj::cb_seq,HX_("cb_seq",bf,72,bc,41)},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void Ogg_helper_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Ogg_helper_obj::callbacks_set,"callbacks_set");
	HX_MARK_MEMBER_NAME(Ogg_helper_obj::callbacks,"callbacks");
	HX_MARK_MEMBER_NAME(Ogg_helper_obj::cb_seq,"cb_seq");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Ogg_helper_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Ogg_helper_obj::callbacks_set,"callbacks_set");
	HX_VISIT_MEMBER_NAME(Ogg_helper_obj::callbacks,"callbacks");
	HX_VISIT_MEMBER_NAME(Ogg_helper_obj::cb_seq,"cb_seq");
};

#endif

hx::Class Ogg_helper_obj::__mClass;

static ::String Ogg_helper_obj_sStaticFields[] = {
	HX_("callbacks_set",b1,72,f4,1f),
	HX_("callbacks",0e,f3,bf,a6),
	HX_("cb_seq",bf,72,bc,41),
	HX_("ov_open_callbacks",71,1e,24,21),
	HX_("read_callback",0e,2b,38,b8),
	HX_("seek_callback",ac,9c,7b,43),
	HX_("close_callback",6c,c2,24,c0),
	HX_("tell_callback",d3,80,9b,cf),
	::String(null())
};

void Ogg_helper_obj::__register()
{
	Ogg_helper_obj _hx_dummy;
	Ogg_helper_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("ogg._Ogg.Ogg_helper",1d,5f,1b,c7);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Ogg_helper_obj::__GetStatic;
	__mClass->mSetStaticField = &Ogg_helper_obj::__SetStatic;
	__mClass->mMarkFunc = Ogg_helper_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Ogg_helper_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Ogg_helper_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Ogg_helper_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Ogg_helper_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Ogg_helper_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Ogg_helper_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_7af8f7cc7903114e_135_boot)
HXDLIN( 135)		callbacks_set = false;
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_7af8f7cc7903114e_136_boot)
HXDLIN( 136)		callbacks =  ::haxe::ds::IntMap_obj::__alloc( HX_CTX );
            	}
{
            	HX_STACKFRAME(&_hx_pos_7af8f7cc7903114e_137_boot)
HXDLIN( 137)		cb_seq = 0;
            	}
}

} // end namespace ogg
} // end namespace _Ogg
