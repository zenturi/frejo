// Generated by Haxe 4.0.0-preview.4+1e3e5e0
#include <hxcpp.h>

#ifndef INCLUDED_haxe_rtti_CType
#include <haxe/rtti/CType.h>
#endif
namespace haxe{
namespace rtti{

::haxe::rtti::CType CType_obj::CAbstract(::String name,::Array< ::Dynamic> params)
{
	return hx::CreateEnum< CType_obj >(HX_("CAbstract",45,f8,5e,b7),7,2)->_hx_init(0,name)->_hx_init(1,params);
}

::haxe::rtti::CType CType_obj::CAnonymous(::Array< ::Dynamic> fields)
{
	return hx::CreateEnum< CType_obj >(HX_("CAnonymous",aa,53,63,6d),5,1)->_hx_init(0,fields);
}

::haxe::rtti::CType CType_obj::CClass(::String name,::Array< ::Dynamic> params)
{
	return hx::CreateEnum< CType_obj >(HX_("CClass",f5,14,6f,a5),2,2)->_hx_init(0,name)->_hx_init(1,params);
}

::haxe::rtti::CType CType_obj::CDynamic( ::haxe::rtti::CType t)
{
	return hx::CreateEnum< CType_obj >(HX_("CDynamic",7c,a5,9a,fb),6,1)->_hx_init(0,t);
}

::haxe::rtti::CType CType_obj::CEnum(::String name,::Array< ::Dynamic> params)
{
	return hx::CreateEnum< CType_obj >(HX_("CEnum",e4,74,c8,c1),1,2)->_hx_init(0,name)->_hx_init(1,params);
}

::haxe::rtti::CType CType_obj::CFunction(::Array< ::Dynamic> args, ::haxe::rtti::CType ret)
{
	return hx::CreateEnum< CType_obj >(HX_("CFunction",7b,e2,32,23),4,2)->_hx_init(0,args)->_hx_init(1,ret);
}

::haxe::rtti::CType CType_obj::CTypedef(::String name,::Array< ::Dynamic> params)
{
	return hx::CreateEnum< CType_obj >(HX_("CTypedef",48,3d,5d,be),3,2)->_hx_init(0,name)->_hx_init(1,params);
}

::haxe::rtti::CType CType_obj::CUnknown;

bool CType_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	if (inName==HX_("CAbstract",45,f8,5e,b7)) { outValue = CType_obj::CAbstract_dyn(); return true; }
	if (inName==HX_("CAnonymous",aa,53,63,6d)) { outValue = CType_obj::CAnonymous_dyn(); return true; }
	if (inName==HX_("CClass",f5,14,6f,a5)) { outValue = CType_obj::CClass_dyn(); return true; }
	if (inName==HX_("CDynamic",7c,a5,9a,fb)) { outValue = CType_obj::CDynamic_dyn(); return true; }
	if (inName==HX_("CEnum",e4,74,c8,c1)) { outValue = CType_obj::CEnum_dyn(); return true; }
	if (inName==HX_("CFunction",7b,e2,32,23)) { outValue = CType_obj::CFunction_dyn(); return true; }
	if (inName==HX_("CTypedef",48,3d,5d,be)) { outValue = CType_obj::CTypedef_dyn(); return true; }
	if (inName==HX_("CUnknown",87,29,00,a7)) { outValue = CType_obj::CUnknown; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(CType_obj)

int CType_obj::__FindIndex(::String inName)
{
	if (inName==HX_("CAbstract",45,f8,5e,b7)) return 7;
	if (inName==HX_("CAnonymous",aa,53,63,6d)) return 5;
	if (inName==HX_("CClass",f5,14,6f,a5)) return 2;
	if (inName==HX_("CDynamic",7c,a5,9a,fb)) return 6;
	if (inName==HX_("CEnum",e4,74,c8,c1)) return 1;
	if (inName==HX_("CFunction",7b,e2,32,23)) return 4;
	if (inName==HX_("CTypedef",48,3d,5d,be)) return 3;
	if (inName==HX_("CUnknown",87,29,00,a7)) return 0;
	return super::__FindIndex(inName);
}

STATIC_HX_DEFINE_DYNAMIC_FUNC2(CType_obj,CAbstract,return)

STATIC_HX_DEFINE_DYNAMIC_FUNC1(CType_obj,CAnonymous,return)

STATIC_HX_DEFINE_DYNAMIC_FUNC2(CType_obj,CClass,return)

STATIC_HX_DEFINE_DYNAMIC_FUNC1(CType_obj,CDynamic,return)

STATIC_HX_DEFINE_DYNAMIC_FUNC2(CType_obj,CEnum,return)

STATIC_HX_DEFINE_DYNAMIC_FUNC2(CType_obj,CFunction,return)

STATIC_HX_DEFINE_DYNAMIC_FUNC2(CType_obj,CTypedef,return)

int CType_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("CAbstract",45,f8,5e,b7)) return 2;
	if (inName==HX_("CAnonymous",aa,53,63,6d)) return 1;
	if (inName==HX_("CClass",f5,14,6f,a5)) return 2;
	if (inName==HX_("CDynamic",7c,a5,9a,fb)) return 1;
	if (inName==HX_("CEnum",e4,74,c8,c1)) return 2;
	if (inName==HX_("CFunction",7b,e2,32,23)) return 2;
	if (inName==HX_("CTypedef",48,3d,5d,be)) return 2;
	if (inName==HX_("CUnknown",87,29,00,a7)) return 0;
	return super::__FindArgCount(inName);
}

hx::Val CType_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	if (inName==HX_("CAbstract",45,f8,5e,b7)) return CAbstract_dyn();
	if (inName==HX_("CAnonymous",aa,53,63,6d)) return CAnonymous_dyn();
	if (inName==HX_("CClass",f5,14,6f,a5)) return CClass_dyn();
	if (inName==HX_("CDynamic",7c,a5,9a,fb)) return CDynamic_dyn();
	if (inName==HX_("CEnum",e4,74,c8,c1)) return CEnum_dyn();
	if (inName==HX_("CFunction",7b,e2,32,23)) return CFunction_dyn();
	if (inName==HX_("CTypedef",48,3d,5d,be)) return CTypedef_dyn();
	if (inName==HX_("CUnknown",87,29,00,a7)) return CUnknown;
	return super::__Field(inName,inCallProp);
}

static ::String CType_obj_sStaticFields[] = {
	HX_("CUnknown",87,29,00,a7),
	HX_("CEnum",e4,74,c8,c1),
	HX_("CClass",f5,14,6f,a5),
	HX_("CTypedef",48,3d,5d,be),
	HX_("CFunction",7b,e2,32,23),
	HX_("CAnonymous",aa,53,63,6d),
	HX_("CDynamic",7c,a5,9a,fb),
	HX_("CAbstract",45,f8,5e,b7),
	::String(null())
};

hx::Class CType_obj::__mClass;

Dynamic __Create_CType_obj() { return new CType_obj; }

void CType_obj::__register()
{

hx::Static(__mClass) = hx::_hx_RegisterClass(HX_("haxe.rtti.CType",ee,cd,79,74), hx::TCanCast< CType_obj >,CType_obj_sStaticFields,0,
	&__Create_CType_obj, &__Create,
	&super::__SGetClass(), &CreateCType_obj, 0
#ifdef HXCPP_VISIT_ALLOCS
    , 0
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &CType_obj::__GetStatic;
}

void CType_obj::__boot()
{
CUnknown = hx::CreateConstEnum< CType_obj >(HX_("CUnknown",87,29,00,a7),0);
}


} // end namespace haxe
} // end namespace rtti
