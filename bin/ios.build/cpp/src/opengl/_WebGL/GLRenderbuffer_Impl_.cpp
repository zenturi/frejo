// Generated by Haxe 4.0.0-preview.4+1e3e5e0
#include <hxcpp.h>

#ifndef INCLUDED_opengl_GLObject
#include <opengl/GLObject.h>
#endif
#ifndef INCLUDED_opengl__WebGL_GLRenderbuffer_Impl_
#include <opengl/_WebGL/GLRenderbuffer_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_66d872ce0c8c17ab_1027__new,"opengl._WebGL.GLRenderbuffer_Impl_","_new",0x32fd9f7f,"opengl._WebGL.GLRenderbuffer_Impl_._new","opengl/WebGL.hx",1027,0x584405a5)
HX_LOCAL_STACK_FRAME(_hx_pos_66d872ce0c8c17ab_1028_toInt,"opengl._WebGL.GLRenderbuffer_Impl_","toInt",0x82ec0e56,"opengl._WebGL.GLRenderbuffer_Impl_.toInt","opengl/WebGL.hx",1028,0x584405a5)
HX_LOCAL_STACK_FRAME(_hx_pos_66d872ce0c8c17ab_1029_fromInt,"opengl._WebGL.GLRenderbuffer_Impl_","fromInt",0xee22fa47,"opengl._WebGL.GLRenderbuffer_Impl_.fromInt","opengl/WebGL.hx",1029,0x584405a5)
HX_LOCAL_STACK_FRAME(_hx_pos_66d872ce0c8c17ab_1030_toDynamic,"opengl._WebGL.GLRenderbuffer_Impl_","toDynamic",0xeb8be066,"opengl._WebGL.GLRenderbuffer_Impl_.toDynamic","opengl/WebGL.hx",1030,0x584405a5)
HX_LOCAL_STACK_FRAME(_hx_pos_66d872ce0c8c17ab_1031_fromDynamic,"opengl._WebGL.GLRenderbuffer_Impl_","fromDynamic",0x17a618d7,"opengl._WebGL.GLRenderbuffer_Impl_.fromDynamic","opengl/WebGL.hx",1031,0x584405a5)
HX_LOCAL_STACK_FRAME(_hx_pos_66d872ce0c8c17ab_1032_toString,"opengl._WebGL.GLRenderbuffer_Impl_","toString",0x055fc1ca,"opengl._WebGL.GLRenderbuffer_Impl_.toString","opengl/WebGL.hx",1032,0x584405a5)
namespace opengl{
namespace _WebGL{

void GLRenderbuffer_Impl__obj::__construct() { }

Dynamic GLRenderbuffer_Impl__obj::__CreateEmpty() { return new GLRenderbuffer_Impl__obj; }

void *GLRenderbuffer_Impl__obj::_hx_vtable = 0;

Dynamic GLRenderbuffer_Impl__obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< GLRenderbuffer_Impl__obj > _hx_result = new GLRenderbuffer_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool GLRenderbuffer_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x5c731404;
}

 ::opengl::GLObject GLRenderbuffer_Impl__obj::_new(int _id){
            	HX_GC_STACKFRAME(&_hx_pos_66d872ce0c8c17ab_1027__new)
HXDLIN(1027)		 ::opengl::GLObject this1 =  ::opengl::GLObject_obj::__alloc( HX_CTX ,_id);
HXDLIN(1027)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GLRenderbuffer_Impl__obj,_new,return )

int GLRenderbuffer_Impl__obj::toInt( ::opengl::GLObject this1){
            	HX_STACKFRAME(&_hx_pos_66d872ce0c8c17ab_1028_toInt)
HXDLIN(1028)		if (hx::IsNull( this1 )) {
HXDLIN(1028)			return 0;
            		}
            		else {
HXDLIN(1028)			return this1->id;
            		}
HXDLIN(1028)		return 0;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GLRenderbuffer_Impl__obj,toInt,return )

 ::opengl::GLObject GLRenderbuffer_Impl__obj::fromInt(int _id){
            	HX_GC_STACKFRAME(&_hx_pos_66d872ce0c8c17ab_1029_fromInt)
HXDLIN(1029)		 ::opengl::GLObject this1 =  ::opengl::GLObject_obj::__alloc( HX_CTX ,_id);
HXDLIN(1029)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GLRenderbuffer_Impl__obj,fromInt,return )

 ::Dynamic GLRenderbuffer_Impl__obj::toDynamic( ::opengl::GLObject this1){
            	HX_STACKFRAME(&_hx_pos_66d872ce0c8c17ab_1030_toDynamic)
HXDLIN(1030)		if (hx::IsNull( this1 )) {
HXDLIN(1030)			return 0;
            		}
            		else {
HXDLIN(1030)			return this1->id;
            		}
HXDLIN(1030)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GLRenderbuffer_Impl__obj,toDynamic,return )

 ::opengl::GLObject GLRenderbuffer_Impl__obj::fromDynamic( ::Dynamic _id){
            	HX_GC_STACKFRAME(&_hx_pos_66d872ce0c8c17ab_1031_fromDynamic)
HXDLIN(1031)		 ::opengl::GLObject this1 =  ::opengl::GLObject_obj::__alloc( HX_CTX ,( (int)(_id) ));
HXDLIN(1031)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GLRenderbuffer_Impl__obj,fromDynamic,return )

::String GLRenderbuffer_Impl__obj::toString( ::opengl::GLObject this1){
            	HX_STACKFRAME(&_hx_pos_66d872ce0c8c17ab_1032_toString)
HXDLIN(1032)		int _hx_tmp;
HXDLIN(1032)		if (hx::IsNull( this1 )) {
HXDLIN(1032)			_hx_tmp = 0;
            		}
            		else {
HXDLIN(1032)			_hx_tmp = this1->id;
            		}
HXDLIN(1032)		return ((HX_("GLRenderbuffer(",2d,4d,5b,45) + _hx_tmp) + HX_(")",29,00,00,00));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GLRenderbuffer_Impl__obj,toString,return )


GLRenderbuffer_Impl__obj::GLRenderbuffer_Impl__obj()
{
}

bool GLRenderbuffer_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"_new") ) { outValue = _new_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"toInt") ) { outValue = toInt_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"fromInt") ) { outValue = fromInt_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"toString") ) { outValue = toString_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"toDynamic") ) { outValue = toDynamic_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"fromDynamic") ) { outValue = fromDynamic_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo *GLRenderbuffer_Impl__obj_sMemberStorageInfo = 0;
static hx::StaticInfo *GLRenderbuffer_Impl__obj_sStaticStorageInfo = 0;
#endif

hx::Class GLRenderbuffer_Impl__obj::__mClass;

static ::String GLRenderbuffer_Impl__obj_sStaticFields[] = {
	HX_("_new",61,15,1f,3f),
	HX_("toInt",34,be,11,14),
	HX_("fromInt",a5,dd,fa,57),
	HX_("toDynamic",44,d7,a9,65),
	HX_("fromDynamic",35,03,56,ce),
	HX_("toString",ac,d0,6e,38),
	::String(null())
};

void GLRenderbuffer_Impl__obj::__register()
{
	GLRenderbuffer_Impl__obj _hx_dummy;
	GLRenderbuffer_Impl__obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("opengl._WebGL.GLRenderbuffer_Impl_",10,0b,7e,12);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &GLRenderbuffer_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(GLRenderbuffer_Impl__obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< GLRenderbuffer_Impl__obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = GLRenderbuffer_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = GLRenderbuffer_Impl__obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace opengl
} // end namespace _WebGL
