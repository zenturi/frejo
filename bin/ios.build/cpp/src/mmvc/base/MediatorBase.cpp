// Generated by Haxe 4.0.0-preview.4+1e3e5e0
#include <hxcpp.h>

#ifndef INCLUDED_mmvc_api_IMediator
#include <mmvc/api/IMediator.h>
#endif
#ifndef INCLUDED_mmvc_base_MediatorBase
#include <mmvc/base/MediatorBase.h>
#endif
#ifndef INCLUDED_msignal_Slot
#include <msignal/Slot.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_d7c7ba329446d819_53_new,"mmvc.base.MediatorBase","new",0xe5a4ef52,"mmvc.base.MediatorBase.new","mmvc/base/MediatorBase.hx",53,0x1e9f6ffe)
HX_LOCAL_STACK_FRAME(_hx_pos_d7c7ba329446d819_57_preRegister,"mmvc.base.MediatorBase","preRegister",0xb6dc7e98,"mmvc.base.MediatorBase.preRegister","mmvc/base/MediatorBase.hx",57,0x1e9f6ffe)
HX_LOCAL_STACK_FRAME(_hx_pos_d7c7ba329446d819_63_onRegister,"mmvc.base.MediatorBase","onRegister",0x8034fdf0,"mmvc.base.MediatorBase.onRegister","mmvc/base/MediatorBase.hx",63,0x1e9f6ffe)
HX_LOCAL_STACK_FRAME(_hx_pos_d7c7ba329446d819_67_preRemove,"mmvc.base.MediatorBase","preRemove",0x6e6f8d39,"mmvc.base.MediatorBase.preRemove","mmvc/base/MediatorBase.hx",67,0x1e9f6ffe)
HX_LOCAL_STACK_FRAME(_hx_pos_d7c7ba329446d819_74_onRemove,"mmvc.base.MediatorBase","onRemove",0x90750691,"mmvc.base.MediatorBase.onRemove","mmvc/base/MediatorBase.hx",74,0x1e9f6ffe)
HX_LOCAL_STACK_FRAME(_hx_pos_d7c7ba329446d819_79_getViewComponent,"mmvc.base.MediatorBase","getViewComponent",0x279044f0,"mmvc.base.MediatorBase.getViewComponent","mmvc/base/MediatorBase.hx",79,0x1e9f6ffe)
HX_LOCAL_STACK_FRAME(_hx_pos_d7c7ba329446d819_84_setViewComponent,"mmvc.base.MediatorBase","setViewComponent",0x7dd23264,"mmvc.base.MediatorBase.setViewComponent","mmvc/base/MediatorBase.hx",84,0x1e9f6ffe)
HX_LOCAL_STACK_FRAME(_hx_pos_d7c7ba329446d819_96_mediate,"mmvc.base.MediatorBase","mediate",0xaea2eb47,"mmvc.base.MediatorBase.mediate","mmvc/base/MediatorBase.hx",96,0x1e9f6ffe)
namespace mmvc{
namespace base{

void MediatorBase_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_d7c7ba329446d819_53_new)
HXDLIN(  53)		this->slots = ::Array_obj< ::Dynamic>::__new(0);
            	}

Dynamic MediatorBase_obj::__CreateEmpty() { return new MediatorBase_obj; }

void *MediatorBase_obj::_hx_vtable = 0;

Dynamic MediatorBase_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< MediatorBase_obj > _hx_result = new MediatorBase_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool MediatorBase_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x446a16c6;
}

static ::mmvc::api::IMediator_obj _hx_mmvc_base_MediatorBase__hx_mmvc_api_IMediator= {
	( void (hx::Object::*)())&::mmvc::base::MediatorBase_obj::preRegister,
	( void (hx::Object::*)())&::mmvc::base::MediatorBase_obj::preRemove,
	(  ::Dynamic (hx::Object::*)())&::mmvc::base::MediatorBase_obj::getViewComponent,
	( void (hx::Object::*)( ::Dynamic))&::mmvc::base::MediatorBase_obj::setViewComponent,
};

void *MediatorBase_obj::_hx_getInterface(int inHash) {
	switch(inHash) {
		case (int)0x3690abcf: return &_hx_mmvc_base_MediatorBase__hx_mmvc_api_IMediator;
	}
	#ifdef HXCPP_SCRIPTABLE
	return super::_hx_getInterface(inHash);
	#else
	return 0;
	#endif
}

void MediatorBase_obj::preRegister(){
            	HX_STACKFRAME(&_hx_pos_d7c7ba329446d819_57_preRegister)
HXLINE(  58)		this->removed = false;
HXLINE(  59)		this->onRegister();
            	}


HX_DEFINE_DYNAMIC_FUNC0(MediatorBase_obj,preRegister,(void))

void MediatorBase_obj::onRegister(){
            	HX_STACKFRAME(&_hx_pos_d7c7ba329446d819_63_onRegister)
            	}


HX_DEFINE_DYNAMIC_FUNC0(MediatorBase_obj,onRegister,(void))

void MediatorBase_obj::preRemove(){
            	HX_STACKFRAME(&_hx_pos_d7c7ba329446d819_67_preRemove)
HXLINE(  68)		this->removed = true;
HXLINE(  69)		this->onRemove();
            	}


HX_DEFINE_DYNAMIC_FUNC0(MediatorBase_obj,preRemove,(void))

void MediatorBase_obj::onRemove(){
            	HX_STACKFRAME(&_hx_pos_d7c7ba329446d819_74_onRemove)
HXDLIN(  74)		int _g = 0;
HXDLIN(  74)		::Array< ::Dynamic> _g1 = this->slots;
HXDLIN(  74)		while((_g < _g1->length)){
HXDLIN(  74)			 ::msignal::Slot slot = _g1->__get(_g).StaticCast<  ::msignal::Slot >();
HXDLIN(  74)			_g = (_g + 1);
HXDLIN(  74)			slot->remove();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(MediatorBase_obj,onRemove,(void))

 ::Dynamic MediatorBase_obj::getViewComponent(){
            	HX_STACKFRAME(&_hx_pos_d7c7ba329446d819_79_getViewComponent)
HXDLIN(  79)		return this->view;
            	}


HX_DEFINE_DYNAMIC_FUNC0(MediatorBase_obj,getViewComponent,return )

void MediatorBase_obj::setViewComponent( ::Dynamic viewComponent){
            	HX_STACKFRAME(&_hx_pos_d7c7ba329446d819_84_setViewComponent)
HXDLIN(  84)		this->view = viewComponent;
            	}


HX_DEFINE_DYNAMIC_FUNC1(MediatorBase_obj,setViewComponent,(void))

void MediatorBase_obj::mediate( ::msignal::Slot slot){
            	HX_STACKFRAME(&_hx_pos_d7c7ba329446d819_96_mediate)
HXDLIN(  96)		this->slots->push(slot);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MediatorBase_obj,mediate,(void))


hx::ObjectPtr< MediatorBase_obj > MediatorBase_obj::__new() {
	hx::ObjectPtr< MediatorBase_obj > __this = new MediatorBase_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< MediatorBase_obj > MediatorBase_obj::__alloc(hx::Ctx *_hx_ctx) {
	MediatorBase_obj *__this = (MediatorBase_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(MediatorBase_obj), true, "mmvc.base.MediatorBase"));
	*(void **)__this = MediatorBase_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

MediatorBase_obj::MediatorBase_obj()
{
}

void MediatorBase_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(MediatorBase);
	HX_MARK_MEMBER_NAME(view,"view");
	HX_MARK_MEMBER_NAME(removed,"removed");
	HX_MARK_MEMBER_NAME(slots,"slots");
	HX_MARK_END_CLASS();
}

void MediatorBase_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(view,"view");
	HX_VISIT_MEMBER_NAME(removed,"removed");
	HX_VISIT_MEMBER_NAME(slots,"slots");
}

hx::Val MediatorBase_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"view") ) { return hx::Val( view ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"slots") ) { return hx::Val( slots ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"removed") ) { return hx::Val( removed ); }
		if (HX_FIELD_EQ(inName,"mediate") ) { return hx::Val( mediate_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"onRemove") ) { return hx::Val( onRemove_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"preRemove") ) { return hx::Val( preRemove_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"onRegister") ) { return hx::Val( onRegister_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"preRegister") ) { return hx::Val( preRegister_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"getViewComponent") ) { return hx::Val( getViewComponent_dyn() ); }
		if (HX_FIELD_EQ(inName,"setViewComponent") ) { return hx::Val( setViewComponent_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val MediatorBase_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"view") ) { view=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"slots") ) { slots=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"removed") ) { removed=inValue.Cast< bool >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void MediatorBase_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("view",65,32,4f,4e));
	outFields->push(HX_("removed",a0,1f,00,f3));
	outFields->push(HX_("slots",b5,60,cc,7e));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo MediatorBase_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(MediatorBase_obj,view),HX_("view",65,32,4f,4e)},
	{hx::fsBool,(int)offsetof(MediatorBase_obj,removed),HX_("removed",a0,1f,00,f3)},
	{hx::fsObject /*Array< ::Dynamic >*/ ,(int)offsetof(MediatorBase_obj,slots),HX_("slots",b5,60,cc,7e)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *MediatorBase_obj_sStaticStorageInfo = 0;
#endif

static ::String MediatorBase_obj_sMemberFields[] = {
	HX_("view",65,32,4f,4e),
	HX_("removed",a0,1f,00,f3),
	HX_("slots",b5,60,cc,7e),
	HX_("preRegister",a6,1d,08,e6),
	HX_("onRegister",a2,7a,56,ae),
	HX_("preRemove",c7,ac,29,63),
	HX_("onRemove",c3,92,35,e4),
	HX_("getViewComponent",22,53,e3,73),
	HX_("setViewComponent",96,40,25,ca),
	HX_("mediate",55,6b,72,f0),
	::String(null()) };

hx::Class MediatorBase_obj::__mClass;

void MediatorBase_obj::__register()
{
	MediatorBase_obj _hx_dummy;
	MediatorBase_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("mmvc.base.MediatorBase",60,9e,ca,83);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(MediatorBase_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< MediatorBase_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = MediatorBase_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = MediatorBase_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace mmvc
} // end namespace base
