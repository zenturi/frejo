// Generated by Haxe 4.0.0-preview.4+1e3e5e0
#include <hxcpp.h>

#ifndef INCLUDED_mmvc_base_MappingConfig
#include <mmvc/base/MappingConfig.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_35942c9505538881_306_new,"mmvc.base.MappingConfig","new",0xabc26f66,"mmvc.base.MappingConfig.new","mmvc/base/MediatorMap.hx",306,0x619f2e11)
namespace mmvc{
namespace base{

void MappingConfig_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_35942c9505538881_306_new)
            	}

Dynamic MappingConfig_obj::__CreateEmpty() { return new MappingConfig_obj; }

void *MappingConfig_obj::_hx_vtable = 0;

Dynamic MappingConfig_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< MappingConfig_obj > _hx_result = new MappingConfig_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool MappingConfig_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x6a3b306a;
}


MappingConfig_obj::MappingConfig_obj()
{
}

void MappingConfig_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(MappingConfig);
	HX_MARK_MEMBER_NAME(mediatorClass,"mediatorClass");
	HX_MARK_MEMBER_NAME(typedViewClasses,"typedViewClasses");
	HX_MARK_MEMBER_NAME(autoCreate,"autoCreate");
	HX_MARK_MEMBER_NAME(autoRemove,"autoRemove");
	HX_MARK_END_CLASS();
}

void MappingConfig_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(mediatorClass,"mediatorClass");
	HX_VISIT_MEMBER_NAME(typedViewClasses,"typedViewClasses");
	HX_VISIT_MEMBER_NAME(autoCreate,"autoCreate");
	HX_VISIT_MEMBER_NAME(autoRemove,"autoRemove");
}

hx::Val MappingConfig_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 10:
		if (HX_FIELD_EQ(inName,"autoCreate") ) { return hx::Val( autoCreate ); }
		if (HX_FIELD_EQ(inName,"autoRemove") ) { return hx::Val( autoRemove ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"mediatorClass") ) { return hx::Val( mediatorClass ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"typedViewClasses") ) { return hx::Val( typedViewClasses ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val MappingConfig_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 10:
		if (HX_FIELD_EQ(inName,"autoCreate") ) { autoCreate=inValue.Cast< bool >(); return inValue; }
		if (HX_FIELD_EQ(inName,"autoRemove") ) { autoRemove=inValue.Cast< bool >(); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"mediatorClass") ) { mediatorClass=inValue.Cast< hx::Class >(); return inValue; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"typedViewClasses") ) { typedViewClasses=inValue.Cast< ::cpp::VirtualArray >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void MappingConfig_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("mediatorClass",05,c7,40,29));
	outFields->push(HX_("typedViewClasses",77,16,25,3c));
	outFields->push(HX_("autoCreate",cb,77,da,e7));
	outFields->push(HX_("autoRemove",13,ad,53,70));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo MappingConfig_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::hx::Class*/ ,(int)offsetof(MappingConfig_obj,mediatorClass),HX_("mediatorClass",05,c7,40,29)},
	{hx::fsObject /*cpp::ArrayBase*/ ,(int)offsetof(MappingConfig_obj,typedViewClasses),HX_("typedViewClasses",77,16,25,3c)},
	{hx::fsBool,(int)offsetof(MappingConfig_obj,autoCreate),HX_("autoCreate",cb,77,da,e7)},
	{hx::fsBool,(int)offsetof(MappingConfig_obj,autoRemove),HX_("autoRemove",13,ad,53,70)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *MappingConfig_obj_sStaticStorageInfo = 0;
#endif

static ::String MappingConfig_obj_sMemberFields[] = {
	HX_("mediatorClass",05,c7,40,29),
	HX_("typedViewClasses",77,16,25,3c),
	HX_("autoCreate",cb,77,da,e7),
	HX_("autoRemove",13,ad,53,70),
	::String(null()) };

hx::Class MappingConfig_obj::__mClass;

void MappingConfig_obj::__register()
{
	MappingConfig_obj _hx_dummy;
	MappingConfig_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("mmvc.base.MappingConfig",74,84,79,2d);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(MappingConfig_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< MappingConfig_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = MappingConfig_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = MappingConfig_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace mmvc
} // end namespace base
