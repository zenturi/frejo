// Generated by Haxe 4.0.0-preview.4+1e3e5e0
#ifndef INCLUDED_frejo_core_VG
#define INCLUDED_frejo_core_VG

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_ab47325cc4883df2
#define INCLUDED_ab47325cc4883df2
#include "linc_nanovg.h"
#endif
HX_DECLARE_CLASS2(frejo,core,VG)

namespace frejo{
namespace core{


class HXCPP_CLASS_ATTRIBUTES VG_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef VG_obj OBJ_;
		VG_obj();

	public:
		enum { _hx_ClassId = 0x10a229ae };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="frejo.core.VG")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"frejo.core.VG"); }
		static hx::ObjectPtr< VG_obj > __new();
		static hx::ObjectPtr< VG_obj > __alloc(hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~VG_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("VG",31,4b,00,00); }

		static  ::frejo::core::VG vg;
		static  ::frejo::core::VG getInstance();
		static ::Dynamic getInstance_dyn();

		::cpp::Pointer<  NVGcontext > context;
		void beginFrame(int windowWidth,int windowHeight,Float devicePixelRatio);
		::Dynamic beginFrame_dyn();

		void endFrame();
		::Dynamic endFrame_dyn();

		 NVGcolor rgba(unsigned char r,unsigned char g,unsigned char b,unsigned char a);

		void save();
		::Dynamic save_dyn();

		void fillColor( NVGcolor color);

		void rect(Float x,Float y,Float w,Float h);
		::Dynamic rect_dyn();

		void fill();
		::Dynamic fill_dyn();

};

} // end namespace frejo
} // end namespace core

#endif /* INCLUDED_frejo_core_VG */ 
