// Generated by Haxe 4.0.0-preview.4+1e3e5e0
#ifndef INCLUDED_frejo_app_View
#define INCLUDED_frejo_app_View

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_frejo_core_View
#include <frejo/core/View.h>
#endif
#ifndef INCLUDED_mmvc_api_IViewContainer
#include <mmvc/api/IViewContainer.h>
#endif
HX_DECLARE_CLASS2(frejo,app,View)
HX_DECLARE_CLASS2(frejo,core,View)
HX_DECLARE_CLASS2(mmvc,api,IViewContainer)

namespace frejo{
namespace app{


class HXCPP_CLASS_ATTRIBUTES View_obj : public  ::frejo::core::View_obj
{
	public:
		typedef  ::frejo::core::View_obj super;
		typedef View_obj OBJ_;
		View_obj();

	public:
		enum { _hx_ClassId = 0x14591534 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="frejo.app.View")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"frejo.app.View"); }
		static hx::ObjectPtr< View_obj > __new();
		static hx::ObjectPtr< View_obj > __alloc(hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~View_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		void *_hx_getInterface(int inHash);
		::String __ToString() const { return HX_("View",85,5e,28,39); }

		 ::Dynamic viewAdded;
		Dynamic viewAdded_dyn() { return viewAdded;}
		 ::Dynamic viewRemoved;
		Dynamic viewRemoved_dyn() { return viewRemoved;}
		void render();
		::Dynamic render_dyn();

		bool isAdded( ::Dynamic view);
		::Dynamic isAdded_dyn();

};

} // end namespace frejo
} // end namespace app

#endif /* INCLUDED_frejo_app_View */ 
