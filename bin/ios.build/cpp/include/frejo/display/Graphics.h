// Generated by Haxe 4.0.0-preview.4+1e3e5e0
#ifndef INCLUDED_frejo_display_Graphics
#define INCLUDED_frejo_display_Graphics

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(frejo,core,VG)
HX_DECLARE_CLASS2(frejo,display,Graphics)

namespace frejo{
namespace display{


class HXCPP_CLASS_ATTRIBUTES Graphics_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Graphics_obj OBJ_;
		Graphics_obj();

	public:
		enum { _hx_ClassId = 0x6a5d89cf };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="frejo.display.Graphics")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"frejo.display.Graphics"); }
		static hx::ObjectPtr< Graphics_obj > __new();
		static hx::ObjectPtr< Graphics_obj > __alloc(hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Graphics_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Graphics",eb,b4,19,ec); }

		::Array< ::Dynamic> commands;
		 ::frejo::core::VG vg;
		::Array< ::Dynamic> removedCommands;
		 ::frejo::display::Graphics rect(Float x,Float y,Float w,Float h);
		::Dynamic rect_dyn();

		 ::frejo::display::Graphics fill();
		::Dynamic fill_dyn();

		 ::frejo::display::Graphics fillColor( ::Dynamic color);
		::Dynamic fillColor_dyn();

		 ::frejo::display::Graphics set(::String name,::cpp::VirtualArray args);
		::Dynamic set_dyn();

		void undo();
		::Dynamic undo_dyn();

		void render();
		::Dynamic render_dyn();

};

} // end namespace frejo
} // end namespace display

#endif /* INCLUDED_frejo_display_Graphics */ 
