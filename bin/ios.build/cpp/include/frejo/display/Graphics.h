// Generated by Haxe 4.0.0-preview.4+1e3e5e0
#ifndef INCLUDED_frejo_display_Graphics
#define INCLUDED_frejo_display_Graphics

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_ab47325cc4883df2
#define INCLUDED_ab47325cc4883df2
#include "linc_nanovg.h"
#endif
HX_DECLARE_CLASS2(frejo,core,VG)
HX_DECLARE_CLASS2(frejo,display,Graphics)

namespace frejo{
namespace display{


class HXCPP_CLASS_ATTRIBUTES Graphics_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Graphics_obj OBJ_;
		Graphics_obj();

	public:
		enum { _hx_ClassId = 0x6a5d89cf };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="frejo.display.Graphics")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"frejo.display.Graphics"); }
		static hx::ObjectPtr< Graphics_obj > __new();
		static hx::ObjectPtr< Graphics_obj > __alloc(hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Graphics_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Graphics",eb,b4,19,ec); }

		static Float TextBounds(Float x,Float y,::String string,::String end,::cpp::Pointer< float > bounds);
		static ::Dynamic TextBounds_dyn();

		static int TextGlyphPositions(Float x,Float y,::String string,::String end,::cpp::Pointer<  NVGglyphPosition > positions,int maxPositions);
		static ::Dynamic TextGlyphPositions_dyn();

		static int TextBreakLines(::String string,::String end,Float breakRowWidth,::cpp::Pointer<  NVGtextRow > rows,int maxRows);
		static ::Dynamic TextBreakLines_dyn();

		static  NVGpaint LinearGradient(Float sx,Float sy,Float ex,Float ey, ::Dynamic icol, ::Dynamic ocol);

		static  NVGpaint BoxGradient(Float x,Float y,Float w,Float h,Float r,Float f, ::Dynamic icol, ::Dynamic ocol);

		static  NVGpaint RadialGradient(Float cx,Float cy,Float inr,Float outr, ::Dynamic icol, ::Dynamic ocol);

		::Array< ::Dynamic> commands;
		 ::frejo::core::VG vg;
		 ::frejo::display::Graphics beginPath();
		::Dynamic beginPath_dyn();

		 ::frejo::display::Graphics moveTo(Float x,Float y);
		::Dynamic moveTo_dyn();

		 ::frejo::display::Graphics lineTo(Float x,Float y);
		::Dynamic lineTo_dyn();

		 ::frejo::display::Graphics bezierTo(Float c1x,Float c1y,Float c2x,Float c2y,Float x,Float y);
		::Dynamic bezierTo_dyn();

		 ::frejo::display::Graphics arcTo(Float x1,Float y1,Float x2,Float y2,Float radius);
		::Dynamic arcTo_dyn();

		 ::frejo::display::Graphics closePath();
		::Dynamic closePath_dyn();

		 ::frejo::display::Graphics pathWinding(int dir);
		::Dynamic pathWinding_dyn();

		 ::frejo::display::Graphics arc(Float cx,Float cy,Float r,Float a0,Float a1,int dir);
		::Dynamic arc_dyn();

		 ::frejo::display::Graphics rect(Float x,Float y,Float w,Float h);
		::Dynamic rect_dyn();

		 ::frejo::display::Graphics roundedRect(Float x,Float y,Float w,Float h,Float r);
		::Dynamic roundedRect_dyn();

		 ::frejo::display::Graphics ellipse(Float cx,Float cy,Float rx,Float ry);
		::Dynamic ellipse_dyn();

		 ::frejo::display::Graphics circle(Float cx,Float cy,Float r);
		::Dynamic circle_dyn();

		 ::frejo::display::Graphics fill();
		::Dynamic fill_dyn();

		 ::frejo::display::Graphics strokeColor( ::Dynamic color);
		::Dynamic strokeColor_dyn();

		 ::frejo::display::Graphics strokePaint( NVGpaint paint);

		 ::frejo::display::Graphics strokeWidth(Float width);
		::Dynamic strokeWidth_dyn();

		 ::frejo::display::Graphics stroke();
		::Dynamic stroke_dyn();

		 ::frejo::display::Graphics fillColor( ::Dynamic color);
		::Dynamic fillColor_dyn();

		 ::frejo::display::Graphics fillPaint( NVGpaint paint);

		 ::frejo::display::Graphics miterLimit(Float limit);
		::Dynamic miterLimit_dyn();

		 ::frejo::display::Graphics lineCap(int cap);
		::Dynamic lineCap_dyn();

		 ::frejo::display::Graphics lineJoin(int join);
		::Dynamic lineJoin_dyn();

		 ::frejo::display::Graphics globalAlpha(Float alpha);
		::Dynamic globalAlpha_dyn();

		 ::frejo::display::Graphics fontSize(Float size);
		::Dynamic fontSize_dyn();

		 ::frejo::display::Graphics fontBlur(Float blur);
		::Dynamic fontBlur_dyn();

		 ::frejo::display::Graphics textLetterSpacing(Float spacing);
		::Dynamic textLetterSpacing_dyn();

		 ::frejo::display::Graphics textLineHeight(Float lineHeight);
		::Dynamic textLineHeight_dyn();

		 ::frejo::display::Graphics textAlign(int align);
		::Dynamic textAlign_dyn();

		 ::frejo::display::Graphics fontFaceId(int font);
		::Dynamic fontFaceId_dyn();

		 ::frejo::display::Graphics fontFace(::String font);
		::Dynamic fontFace_dyn();

		 ::frejo::display::Graphics text(Float x,Float y,::String string,::String end);
		::Dynamic text_dyn();

		 ::frejo::display::Graphics textBox(Float x,Float y,Float breakRowWidth,::String string,::String end);
		::Dynamic textBox_dyn();

		 ::frejo::display::Graphics textBoxBounds(Float x,Float y,Float breakRowWidth,::String string,::String end,::cpp::Pointer< float > bounds);
		::Dynamic textBoxBounds_dyn();

		 ::frejo::display::Graphics textMetrics(::cpp::Pointer< float > ascender,::cpp::Pointer< float > descender,::cpp::Pointer< float > lineh);
		::Dynamic textMetrics_dyn();

		 ::frejo::display::Graphics set(::String name,::cpp::VirtualArray args);
		::Dynamic set_dyn();

		void render();
		::Dynamic render_dyn();

};

} // end namespace frejo
} // end namespace display

#endif /* INCLUDED_frejo_display_Graphics */ 
