// Generated by Haxe 4.0.0-preview.4+1e3e5e0
#ifndef INCLUDED_frejo_display__Paint_Paint_Impl_
#define INCLUDED_frejo_display__Paint_Paint_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(frejo,display,_Paint,Paint_Impl_)

namespace frejo{
namespace display{
namespace _Paint{


class HXCPP_CLASS_ATTRIBUTES Paint_Impl__obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Paint_Impl__obj OBJ_;
		Paint_Impl__obj();

	public:
		enum { _hx_ClassId = 0x446baf5b };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="frejo.display._Paint.Paint_Impl_")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"frejo.display._Paint.Paint_Impl_"); }

		hx::ObjectPtr< Paint_Impl__obj > __new() {
			hx::ObjectPtr< Paint_Impl__obj > __this = new Paint_Impl__obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< Paint_Impl__obj > __alloc(hx::Ctx *_hx_ctx) {
			Paint_Impl__obj *__this = (Paint_Impl__obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Paint_Impl__obj), false, "frejo.display._Paint.Paint_Impl_"));
			*(void **)__this = Paint_Impl__obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Paint_Impl__obj();

		HX_DO_RTTI_ALL;
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Paint_Impl_",9e,16,ad,5e); }

};

} // end namespace frejo
} // end namespace display
} // end namespace _Paint

#endif /* INCLUDED_frejo_display__Paint_Paint_Impl_ */ 
