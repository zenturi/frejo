// Generated by Haxe 4.0.0-preview.4+1e3e5e0
#ifndef INCLUDED_haxe_rtti_TypeTree
#define INCLUDED_haxe_rtti_TypeTree

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(haxe,rtti,TypeTree)
namespace haxe{
namespace rtti{


class TypeTree_obj : public hx::EnumBase_obj
{
	typedef hx::EnumBase_obj super;
		typedef TypeTree_obj OBJ_;

	public:
		TypeTree_obj() {};
		HX_DO_ENUM_RTTI;
		static void __boot();
		static void __register();
		static bool __GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp);
		::String GetEnumName( ) const { return HX_("haxe.rtti.TypeTree",a7,70,a4,d0); }
		::String __ToString() const { return HX_("TypeTree.",d6,d3,cd,7c) + _hx_tag; }

		static ::haxe::rtti::TypeTree TAbstractdecl( ::Dynamic a);
		static ::Dynamic TAbstractdecl_dyn();
		static ::haxe::rtti::TypeTree TClassdecl( ::Dynamic c);
		static ::Dynamic TClassdecl_dyn();
		static ::haxe::rtti::TypeTree TEnumdecl( ::Dynamic e);
		static ::Dynamic TEnumdecl_dyn();
		static ::haxe::rtti::TypeTree TPackage(::String name,::String full,::Array< ::Dynamic> subs);
		static ::Dynamic TPackage_dyn();
		static ::haxe::rtti::TypeTree TTypedecl( ::Dynamic t);
		static ::Dynamic TTypedecl_dyn();
};

} // end namespace haxe
} // end namespace rtti

#endif /* INCLUDED_haxe_rtti_TypeTree */ 
