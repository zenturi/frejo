// Generated by Haxe 4.0.0-preview.4+1e3e5e0
#ifndef INCLUDED_snow_types_TouchEvent
#define INCLUDED_snow_types_TouchEvent

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_22e9f99bc46f541a_713_new)
HX_DECLARE_CLASS2(snow,types,TouchEvent)

namespace snow{
namespace types{


class HXCPP_CLASS_ATTRIBUTES TouchEvent_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef TouchEvent_obj OBJ_;
		TouchEvent_obj();

	public:
		enum { _hx_ClassId = 0x3db07d89 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="snow.types.TouchEvent")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"snow.types.TouchEvent"); }

		hx::ObjectPtr< TouchEvent_obj > __new() {
			hx::ObjectPtr< TouchEvent_obj > __this = new TouchEvent_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< TouchEvent_obj > __alloc(hx::Ctx *_hx_ctx) {
			TouchEvent_obj *__this = (TouchEvent_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(TouchEvent_obj), false, "snow.types.TouchEvent"));
			*(void **)__this = TouchEvent_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_22e9f99bc46f541a_713_new)
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~TouchEvent_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("TouchEvent",fb,af,06,66); }

		int type;
		int touch_id;
		Float x;
		Float y;
		Float dx;
		Float dy;
		void set(int _type,int _id,Float _x,Float _y,Float _dx,Float _dy);
		::Dynamic set_dyn();

		virtual ::String toString();
		::Dynamic toString_dyn();

};

} // end namespace snow
} // end namespace types

#endif /* INCLUDED_snow_types_TouchEvent */ 
