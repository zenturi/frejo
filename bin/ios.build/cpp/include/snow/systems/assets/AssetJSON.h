// Generated by Haxe 4.0.0-preview.4+1e3e5e0
#ifndef INCLUDED_snow_systems_assets_AssetJSON
#define INCLUDED_snow_systems_assets_AssetJSON

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_snow_systems_assets_Asset
#include <snow/systems/assets/Asset.h>
#endif
HX_DECLARE_CLASS1(snow,Snow)
HX_DECLARE_CLASS2(snow,api,Promise)
HX_DECLARE_CLASS3(snow,api,buffers,ArrayBufferView)
HX_DECLARE_CLASS3(snow,systems,assets,Asset)
HX_DECLARE_CLASS3(snow,systems,assets,AssetJSON)

namespace snow{
namespace systems{
namespace assets{


class HXCPP_CLASS_ATTRIBUTES AssetJSON_obj : public  ::snow::systems::assets::Asset_obj
{
	public:
		typedef  ::snow::systems::assets::Asset_obj super;
		typedef AssetJSON_obj OBJ_;
		AssetJSON_obj();

	public:
		enum { _hx_ClassId = 0x1c62f674 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="snow.systems.assets.AssetJSON")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"snow.systems.assets.AssetJSON"); }

		hx::ObjectPtr< AssetJSON_obj > __new() {
			hx::ObjectPtr< AssetJSON_obj > __this = new AssetJSON_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< AssetJSON_obj > __alloc(hx::Ctx *_hx_ctx) {
			AssetJSON_obj *__this = (AssetJSON_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(AssetJSON_obj), false, "snow.systems.assets.AssetJSON"));
			*(void **)__this = AssetJSON_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~AssetJSON_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("AssetJSON",f8,0b,c9,4c); }

		static  ::snow::api::Promise processor( ::snow::Snow _app,::String _id, ::snow::api::buffers::ArrayBufferView _data);
		static ::Dynamic processor_dyn();

};

} // end namespace snow
} // end namespace systems
} // end namespace assets

#endif /* INCLUDED_snow_systems_assets_AssetJSON */ 
