// Generated by Haxe 4.0.0-preview.4+1e3e5e0
#ifndef INCLUDED_snow_modules_sdl_IO
#define INCLUDED_snow_modules_sdl_IO

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_snow_core_native_io_IO
#include <snow/core/native/io/IO.h>
#endif
#ifndef INCLUDED_92958f0660df95c6
#define INCLUDED_92958f0660df95c6
#include "linc_sdl.h"
#endif
HX_DECLARE_CLASS1(snow,Snow)
HX_DECLARE_CLASS3(snow,api,buffers,ArrayBufferView)
HX_DECLARE_CLASS4(snow,core,native,io,IO)
HX_DECLARE_CLASS3(snow,modules,interfaces,IO)
HX_DECLARE_CLASS3(snow,modules,sdl,IO)

namespace snow{
namespace modules{
namespace sdl{


class HXCPP_CLASS_ATTRIBUTES IO_obj : public  ::snow::core::native::io::IO_obj
{
	public:
		typedef  ::snow::core::native::io::IO_obj super;
		typedef IO_obj OBJ_;
		IO_obj();

	public:
		enum { _hx_ClassId = 0x099883f1 };

		void __construct( ::snow::Snow _app);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="snow.modules.sdl.IO")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"snow.modules.sdl.IO"); }
		static hx::ObjectPtr< IO_obj > __new( ::snow::Snow _app);
		static hx::ObjectPtr< IO_obj > __alloc(hx::Ctx *_hx_ctx, ::snow::Snow _app);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~IO_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("IO",e6,3f,00,00); }

		::String app_path();
		::Dynamic app_path_dyn();

		::String app_path_prefs();
		::Dynamic app_path_prefs_dyn();

		::cpp::Pointer<  SDL_RWops > file_handle(::String _path,::String _mode);

		::cpp::Pointer<  SDL_RWops > file_handle_from_mem( ::snow::api::buffers::ArrayBufferView mem,int size);
		::Dynamic file_handle_from_mem_dyn();

		int file_read(::cpp::Pointer<  SDL_RWops > file, ::snow::api::buffers::ArrayBufferView dest,int size,int maxnum);

		int file_write(::cpp::Pointer<  SDL_RWops > file, ::snow::api::buffers::ArrayBufferView src,int size,int num);
		::Dynamic file_write_dyn();

		int file_seek(::cpp::Pointer<  SDL_RWops > file,int offset,int whence);

		int file_tell(::cpp::Pointer<  SDL_RWops > file);

		int file_close(::cpp::Pointer<  SDL_RWops > file);

};

} // end namespace snow
} // end namespace modules
} // end namespace sdl

#endif /* INCLUDED_snow_modules_sdl_IO */ 
