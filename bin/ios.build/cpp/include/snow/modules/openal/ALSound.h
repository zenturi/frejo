// Generated by Haxe 4.0.0-preview.4+1e3e5e0
#ifndef INCLUDED_snow_modules_openal_ALSound
#define INCLUDED_snow_modules_openal_ALSound

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(snow,modules,interfaces,Audio)
HX_DECLARE_CLASS3(snow,modules,openal,ALSound)
HX_DECLARE_CLASS3(snow,modules,openal,Audio)
HX_DECLARE_CLASS3(snow,systems,audio,AudioInstance)
HX_DECLARE_CLASS3(snow,systems,audio,AudioSource)

namespace snow{
namespace modules{
namespace openal{


class HXCPP_CLASS_ATTRIBUTES ALSound_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef ALSound_obj OBJ_;
		ALSound_obj();

	public:
		enum { _hx_ClassId = 0x0a184597 };

		void __construct( ::snow::modules::openal::Audio _module, ::snow::systems::audio::AudioSource _source, ::snow::systems::audio::AudioInstance _instance);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="snow.modules.openal.ALSound")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"snow.modules.openal.ALSound"); }
		static hx::ObjectPtr< ALSound_obj > __new( ::snow::modules::openal::Audio _module, ::snow::systems::audio::AudioSource _source, ::snow::systems::audio::AudioInstance _instance);
		static hx::ObjectPtr< ALSound_obj > __alloc(hx::Ctx *_hx_ctx, ::snow::modules::openal::Audio _module, ::snow::systems::audio::AudioSource _source, ::snow::systems::audio::AudioInstance _instance);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~ALSound_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("ALSound",e4,8f,0c,06); }

		 ::snow::systems::audio::AudioInstance instance;
		 ::snow::systems::audio::AudioSource source;
		 ::snow::modules::openal::Audio module;
		int alsource;
		int alformat;
		Float pan;
		bool looping;
		Float current_time;
		virtual void init();
		::Dynamic init_dyn();

		virtual void position(Float _time);
		::Dynamic position_dyn();

		virtual Float position_of();
		::Dynamic position_of_dyn();

		virtual void destroy();
		::Dynamic destroy_dyn();

		virtual void tick();
		::Dynamic tick_dyn();

		int source_format();
		::Dynamic source_format_dyn();

};

} // end namespace snow
} // end namespace modules
} // end namespace openal

#endif /* INCLUDED_snow_modules_openal_ALSound */ 
