// Generated by Haxe 4.0.0-preview.4+1e3e5e0
#ifndef INCLUDED_facebook_yoga_Enums
#define INCLUDED_facebook_yoga_Enums

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_0067bf2d025ab5b6
#define INCLUDED_0067bf2d025ab5b6
#include "YGEnums.h"
#endif
#ifndef INCLUDED_41ceae67ff73b9ad
#define INCLUDED_41ceae67ff73b9ad
#include "linc_yoga.h"
#endif
HX_DECLARE_CLASS2(facebook,yoga,Enums)

namespace facebook{
namespace yoga{


class HXCPP_CLASS_ATTRIBUTES Enums_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Enums_obj OBJ_;
		Enums_obj();

	public:
		enum { _hx_ClassId = 0x6a968a3c };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="facebook.yoga.Enums")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"facebook.yoga.Enums"); }

		hx::ObjectPtr< Enums_obj > __new() {
			hx::ObjectPtr< Enums_obj > __this = new Enums_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< Enums_obj > __alloc(hx::Ctx *_hx_ctx) {
			Enums_obj *__this = (Enums_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Enums_obj), false, "facebook.yoga.Enums"));
			*(void **)__this = Enums_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Enums_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Enums",32,a6,b4,03); }

		static void __boot();
		static int edgeCount;
		static int experimentalFeatureCount;
		static int measureModeCount;
		static  YGValue valueUndefined;
		static  YGValue valueAuto;
		static  YGValue valueZero;
		static ::String alignToString( YGAlign value);

		static ::String dimensionToString( YGDimension value);

		static ::String directionToString( YGDirection value);

		static ::String displayToString( YGDisplay value);

		static ::String edgeToString( YGEdge value);

		static ::String experimentalFeatureToString( YGExperimentalFeature value);

		static ::String flexDirectionToString( YGFlexDirection value);

		static ::String justifyToString( YGJustify value);

		static ::String logLevelToString( YGLogLevel value);

		static ::String measureModeToString( YGMeasureMode value);

		static ::String nodeTypeToString( YGNodeType value);

		static ::String overflowToString( YGOverflow value);

		static ::String positionTypeToString( YGPositionType value);

		static ::String printOptionsToString( YGPrintOptions value);

		static ::String unitToString( YGUnit value);

		static ::String wrapToString( YGWrap value);

};

} // end namespace facebook
} // end namespace yoga

#endif /* INCLUDED_facebook_yoga_Enums */ 
