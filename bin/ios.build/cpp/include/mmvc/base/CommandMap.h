// Generated by Haxe 4.0.0-preview.4+1e3e5e0
#ifndef INCLUDED_mmvc_base_CommandMap
#define INCLUDED_mmvc_base_CommandMap

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_mmvc_api_ICommandMap
#include <mmvc/api/ICommandMap.h>
#endif
HX_DECLARE_CLASS1(haxe,IMap)
HX_DECLARE_CLASS2(haxe,ds,ObjectMap)
HX_DECLARE_CLASS1(minject,Injector)
HX_DECLARE_CLASS2(mmvc,api,ICommandMap)
HX_DECLARE_CLASS2(mmvc,base,CommandMap)

namespace mmvc{
namespace base{


class HXCPP_CLASS_ATTRIBUTES CommandMap_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef CommandMap_obj OBJ_;
		CommandMap_obj();

	public:
		enum { _hx_ClassId = 0x364b0f0f };

		void __construct( ::minject::Injector injector);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="mmvc.base.CommandMap")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"mmvc.base.CommandMap"); }
		static hx::ObjectPtr< CommandMap_obj > __new( ::minject::Injector injector);
		static hx::ObjectPtr< CommandMap_obj > __alloc(hx::Ctx *_hx_ctx, ::minject::Injector injector);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~CommandMap_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		void *_hx_getInterface(int inHash);
		::String __ToString() const { return HX_("CommandMap",31,f6,4d,3a); }

		 ::minject::Injector injector;
		 ::haxe::ds::ObjectMap signalMap;
		 ::haxe::ds::ObjectMap signalClassMap;
		 ::haxe::ds::ObjectMap detainedCommands;
};

} // end namespace mmvc
} // end namespace base

#endif /* INCLUDED_mmvc_base_CommandMap */ 
