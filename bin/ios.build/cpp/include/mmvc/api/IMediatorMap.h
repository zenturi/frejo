// Generated by Haxe 4.0.0-preview.4+1e3e5e0
#ifndef INCLUDED_mmvc_api_IMediatorMap
#define INCLUDED_mmvc_api_IMediatorMap

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(mmvc,api,IMediator)
HX_DECLARE_CLASS2(mmvc,api,IMediatorMap)
HX_DECLARE_CLASS2(mmvc,api,IViewContainer)

namespace mmvc{
namespace api{


class HXCPP_CLASS_ATTRIBUTES IMediatorMap_obj {
	public:
		typedef hx::Object super;
		HX_DO_INTERFACE_RTTI;

		static void __boot();
		bool (hx::Object :: *_hx_set_enabled)(bool value); 
		static inline bool set_enabled( ::Dynamic _hx_,bool value) {
			return (_hx_.mPtr->*( static_cast< ::mmvc::api::IMediatorMap_obj *>(_hx_.mPtr->_hx_getInterface(0xd3fa220d)))->_hx_set_enabled)(value);
		}
		::Dynamic (hx::Object :: *_hx_set_contextView)(::Dynamic value); 
		static inline ::Dynamic set_contextView( ::Dynamic _hx_,::Dynamic value) {
			return (_hx_.mPtr->*( static_cast< ::mmvc::api::IMediatorMap_obj *>(_hx_.mPtr->_hx_getInterface(0xd3fa220d)))->_hx_set_contextView)(value);
		}
		void (hx::Object :: *_hx_mapView)( ::Dynamic viewClassOrName,hx::Class mediatorClass, ::Dynamic injectViewAs, ::Dynamic autoCreate, ::Dynamic autoRemove); 
		static inline void mapView( ::Dynamic _hx_, ::Dynamic viewClassOrName,hx::Class mediatorClass, ::Dynamic injectViewAs, ::Dynamic autoCreate, ::Dynamic autoRemove) {
			(_hx_.mPtr->*( static_cast< ::mmvc::api::IMediatorMap_obj *>(_hx_.mPtr->_hx_getInterface(0xd3fa220d)))->_hx_mapView)(viewClassOrName,mediatorClass,injectViewAs,autoCreate,autoRemove);
		}
		void (hx::Object :: *_hx_unmapView)( ::Dynamic viewClassOrName); 
		static inline void unmapView( ::Dynamic _hx_, ::Dynamic viewClassOrName) {
			(_hx_.mPtr->*( static_cast< ::mmvc::api::IMediatorMap_obj *>(_hx_.mPtr->_hx_getInterface(0xd3fa220d)))->_hx_unmapView)(viewClassOrName);
		}
		::Dynamic (hx::Object :: *_hx_createMediator)( ::Dynamic viewComponent); 
		static inline ::Dynamic createMediator( ::Dynamic _hx_, ::Dynamic viewComponent) {
			return (_hx_.mPtr->*( static_cast< ::mmvc::api::IMediatorMap_obj *>(_hx_.mPtr->_hx_getInterface(0xd3fa220d)))->_hx_createMediator)(viewComponent);
		}
		void (hx::Object :: *_hx_registerMediator)( ::Dynamic viewComponent,::Dynamic mediator); 
		static inline void registerMediator( ::Dynamic _hx_, ::Dynamic viewComponent,::Dynamic mediator) {
			(_hx_.mPtr->*( static_cast< ::mmvc::api::IMediatorMap_obj *>(_hx_.mPtr->_hx_getInterface(0xd3fa220d)))->_hx_registerMediator)(viewComponent,mediator);
		}
		::Dynamic (hx::Object :: *_hx_removeMediator)(::Dynamic mediator); 
		static inline ::Dynamic removeMediator( ::Dynamic _hx_,::Dynamic mediator) {
			return (_hx_.mPtr->*( static_cast< ::mmvc::api::IMediatorMap_obj *>(_hx_.mPtr->_hx_getInterface(0xd3fa220d)))->_hx_removeMediator)(mediator);
		}
		::Dynamic (hx::Object :: *_hx_removeMediatorByView)( ::Dynamic viewComponent); 
		static inline ::Dynamic removeMediatorByView( ::Dynamic _hx_, ::Dynamic viewComponent) {
			return (_hx_.mPtr->*( static_cast< ::mmvc::api::IMediatorMap_obj *>(_hx_.mPtr->_hx_getInterface(0xd3fa220d)))->_hx_removeMediatorByView)(viewComponent);
		}
		::Dynamic (hx::Object :: *_hx_retrieveMediator)( ::Dynamic viewComponent); 
		static inline ::Dynamic retrieveMediator( ::Dynamic _hx_, ::Dynamic viewComponent) {
			return (_hx_.mPtr->*( static_cast< ::mmvc::api::IMediatorMap_obj *>(_hx_.mPtr->_hx_getInterface(0xd3fa220d)))->_hx_retrieveMediator)(viewComponent);
		}
		bool (hx::Object :: *_hx_hasMapping)( ::Dynamic viewClassOrName); 
		static inline bool hasMapping( ::Dynamic _hx_, ::Dynamic viewClassOrName) {
			return (_hx_.mPtr->*( static_cast< ::mmvc::api::IMediatorMap_obj *>(_hx_.mPtr->_hx_getInterface(0xd3fa220d)))->_hx_hasMapping)(viewClassOrName);
		}
		bool (hx::Object :: *_hx_hasMediator)(::Dynamic mediator); 
		static inline bool hasMediator( ::Dynamic _hx_,::Dynamic mediator) {
			return (_hx_.mPtr->*( static_cast< ::mmvc::api::IMediatorMap_obj *>(_hx_.mPtr->_hx_getInterface(0xd3fa220d)))->_hx_hasMediator)(mediator);
		}
		bool (hx::Object :: *_hx_hasMediatorForView)( ::Dynamic viewComponent); 
		static inline bool hasMediatorForView( ::Dynamic _hx_, ::Dynamic viewComponent) {
			return (_hx_.mPtr->*( static_cast< ::mmvc::api::IMediatorMap_obj *>(_hx_.mPtr->_hx_getInterface(0xd3fa220d)))->_hx_hasMediatorForView)(viewComponent);
		}
};

} // end namespace mmvc
} // end namespace api

#endif /* INCLUDED_mmvc_api_IMediatorMap */ 
